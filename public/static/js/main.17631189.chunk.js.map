{"version":3,"sources":["components/LandingHeader.jsx","components/LoginForm.jsx","components/About.jsx","components/SignupForm.jsx","components/ForgotPasswordForm.jsx","components/NewPasswordSent.jsx","components/ForgotPassword.jsx","components/LandingPage.jsx","components/ReportCard.jsx","components/ReportList.jsx","components/CreateReport.jsx","components/SubredditList.jsx","components/Submissions.jsx","components/ViewReport.jsx","components/Dashboard.jsx","App.js","serviceWorker.js","index.js"],"names":["LandingHeader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","handleToggle","_this2","react_default","a","createElement","Jumbotron_default","style","cursor","onClick","className","React","Component","LoginForm","state","handle","password","rememberMe","handleChange","handleSubmit","event","target","id","setState","value","checked","preventDefault","fetch","then","response","json","loggedIn","handleLogin","action","_this3","Container_default","Row_default","Col_default","Form_default","onSubmit","Group","controlId","Label","Control","onChange","type","placeholder","Check","label","Button_default","variant","block","About","textAlign","size","SignupForm","createNewUser","handleAlert","username","email","passwordCheck","firstName","lastName","showWarning","warning","e","window","scrollTo","Alert_default","onClose","alertShown","dismissible","method","mode","cache","credentials","headers","Content-Type","redirect","referrer","body","JSON","stringify","userCreated","reason","_this4","required","marginBottom","ForgotPasswordForm","handleButtonText","spinner","Spinner_default","animation","closeWarning","requestNewPassword","NewPasswordSent","ForgotPassword","showForm","showSpinner","handleDisplay","components_ForgotPasswordForm","components_NewPasswordSent","result","console","log","showTrue","LandingPage","show","components_LoginForm","components_About","components_SignupForm","components_ForgotPassword","components_LandingHeader","ReportCard","handleTitleClick","changeView","reportIndex","showDeleteReportWarning","Card_default","width","Header","Body","Title","report","name","Text","description","ButtonGroup_default","ReportList","showAlert","showModal","deleteReportName","deleteReportID","createReport","updateReportData","deleteReport","reports","toArray","reportid","userInfo","userid","res","updateReports","reportData","_this5","backgroundColor","padding","fontWeight","firstname","marginRight","marginLeft","Modal_default","onHide","closeButton","Footer","margin","display","flexWrap","justifyContent","map","index","components_ReportCard","key","delimiters","CreateReport","reportName","reportDescription","subreddits","suggestions","notifications","handleDelete","handleAddition","handleDrag","forEach","push","text","subredditname","userID","reportCreated","i","filter","subreddit","concat","toConsumableArray","currPos","newPos","newSubreddits","slice","splice","_this$state","as","rows","ReactTags","classNames","tags","tagInput","tagInputField","selected","tag","remove","allowDeleteFromEmptyInput","SubredditList","updateSubredditIndex","Submissions","subredditName","submissions","submission","border","borderRadius","color","rel","href","url","title","handlename","marginTop","comments","comment","commenttext","ViewReport","subredditIndex","showSubmissions","handleSpinner","components_Submissions","components_SubredditList","Dashboard","handleView","components_ReportList","userData","components_CreateReport","components_ViewReport","view","arguments","length","undefined","Navbar_default","bg","Brand","DropdownButton_default","alignRight","Dropdown_default","Item","App","serverChecked","initialLoad","List","components_Dashboard","components_LandingPage","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17631189.chunk.js","sourcesContent":["import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nclass LandingHeader extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.handleToggle('loginForm')\n  }\n\n  render() {\n    return(\n      <Jumbotron>\n        <h1 style={{cursor: 'pointer'}}onClick={() => {this.handleClick()}} className=\"display-4\">Reddit Aggregator</h1>\n        <p className=\"lead\">Personalized web app to collect the best daily Reddit submissions</p>\n      </Jumbotron>\n\n    );\n  };\n}\n\nexport default LandingHeader;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport '../css/login-form.css';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      handle: '',\n      password: '',\n      rememberMe: 0\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    if(event.target.id === 'handle') {this.setState({handle: event.target.value})}\n    if(event.target.id === 'password') {this.setState({password: event.target.value})}\n    if(event.target.id === 'rememberMe') {this.setState({rememberMe: event.target.checked})}\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch('http://localhost:5000/login?handle=' +\n    this.state.handle + '&password=' + this.state.password +\n    '&rememberMe=' + this.state.rememberMe)\n      .then((response) => {\n        return response.json(response);\n      })\n      .then((response) => {\n        if(response.loggedIn) {\n          this.props.handleLogin(response);\n        }\n      });\n  }\n\n  handleClick(action) {\n    this.props.handleToggle(action);\n  }\n\n  render() {\n    return(\n      <Container className=\"login-form\">\n        <Row>\n          <Col>\n            <Form onSubmit={this.handleSubmit}>\n              <h3>Please Sign In</h3>\n              <Form.Group controlId=\"handle\">\n                <Form.Label>Username or Email</Form.Label>\n                <Form.Control value={this.state.handle} onChange={this.handleChange} type=\"email\" placeholder=\"Enter Username or Email\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control value={this.state.password} onChange={this.handleChange} type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n              <Form.Group controlId=\"rememberMe\">\n                <Form.Check onChange={this.handleChange} type=\"checkbox\" label=\"Remember Me\" />\n              </Form.Group>\n              <Button variant=\"dark\" type=\"submit\" block>\n                Login\n              </Button>\n            </Form>\n            <p onClick={() => {this.handleClick('about')}}>New Here? Learn More &amp; Sign Up!</p>\n            <p onClick={() => {this.handleClick('forgotPassword')}}>Forgot Password?</p>\n          </ Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport '../css/about.css';\n\nclass About extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(action) {\n    if(action === 'loginForm') {\n      this.props.handleToggle(action);\n    } else {\n      this.props.handleToggle(action);\n    }\n  }\n\n  render() {\n    return(\n      <Container className=\"about\">\n        <h2>Who has time to be on Reddit all day?</h2>\n        <p>\n        Many Reddit posts get submitted throughout the day, and unless you can constantly check your reddit feed some content may be missed and buried by other submissions.</p>\n\n        <p>\n        Reddit Aggregator helps mitigate this problem by allowing you to create an account and submit a list of subreddits you enjoy. Reddit Aggregator will check the subreddits hourly and compile a list of entries throughout the day that match the subreddits you provide. These entries are bundled together into a nice readable format called a report. Users can have several reports for different purposes (each having their own set of subreddits).\n        </p>\n\n        <p className=\"lead\">\n        Sound cool? Go ahead and sign up, it just takes a minute.\n        </p>\n        <Container style={{textAlign: 'center'}} className=\"about-button-conatiner\">\n          <Button size=\"sm\" variant=\"dark\" className=\"about-button\" onClick={() => {this.handleClick('signUpForm')}}>Sign Up</Button>\n          <Button size=\"sm\" variant=\"dark\" className=\"about-button\" onClick={() => {this.handleClick('loginForm')}}>Back to Sign In</Button>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default About;\n","import React from 'react'\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport '../css/signup-form.css';\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.createNewUser = this.createNewUser.bind(this);\n    this.handleAlert = this.handleAlert.bind(this);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      passwordCheck: '',\n      firstName: '',\n      lastName: '',\n      showWarning: false,\n      warning: ''\n    }\n  }\n\n  handleClick(action) {\n    if(action === 'loginForm') {\n      this.props.handleToggle(action);\n    } else {\n      this.props.handleToggle(action);\n    }\n  }\n\n  handleChange(e) {\n    if(e.target.id === 'username') {this.setState({username: e.target.value})}\n    if(e.target.id === 'email') {this.setState({email: e.target.value})}\n    if(e.target.id === 'password') {this.setState({password: e.target.value})}\n    if(e.target.id === 'passwordCheck') {this.setState({passwordCheck: e.target.value})}\n    if(e.target.id === 'firstName') {this.setState({firstName: e.target.value})}\n    if(e.target.id === 'lastName') {this.setState({lastName: e.target.value})}\n  }\n\n  handleAlert() {\n    if(this.state.showWarning) {\n      window.scrollTo(0, 0);\n      return <Alert\n        onClose={() => {this.setState({showWarning: false, alertShown: false})}}\n        dismissible\n        variant=\"danger\">\n          {this.state.warning}\n      </Alert>;\n    }\n  }\n\n  createNewUser(event) {\n    event.preventDefault();\n    if(this.state.password === this.state.passwordCheck) {\n      //create new user\n      fetch('http://localhost:5000/createUser', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'omit',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrer: 'no-referrer',\n        body: JSON.stringify({\n          username: this.state.username,\n          email: this.state.email,\n          password: this.state.password,\n          firstName: this.state.firstName,\n          lastName: this.state.lastName\n        })\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((response) => {\n          if(response.userCreated) {\n\n          } else {\n            //show warning\n            if(response.reason === 'Error: username or email already exists') {\n              this.setState({showWarning: true, warning: 'Username and/or Email Already In Use'});\n            }\n          }\n        });\n    } else {\n      //send warning\n      this.setState({showWarning: true, warning: 'Passwords Do Not Match'});\n    }\n  }\n\n  render() {\n    return(\n      <Container className=\"signup-form\">\n        {this.handleAlert()}\n        <Row>\n          <Col>\n            <Form className=\"signupForm\" onSubmit={this.createNewUser}>\n\n              <h3>Sign Up</h3>\n              <Form.Group controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control value={this.state.username} onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter a Username\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control value={this.state.email} onChange={this.handleChange} required=\"required\" type=\"email\" placeholder=\"Enter your Email\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control value={this.state.password} onChange={this.handleChange} required=\"required\" type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"passwordCheck\">\n                <Form.Label>Retype Password</Form.Label>\n                <Form.Control value={this.state.passwordCheck} onChange={this.handleChange} required=\"required\" type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"firstName\">\n                <Form.Label>First Name</Form.Label>\n                <Form.Control value={this.state.firstName} onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter Your First Name\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"lastName\">\n                <Form.Label>Last Name</Form.Label>\n                <Form.Control  value={this.state.lastName} onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter Your Last Name\" />\n              </Form.Group>\n\n              <Button variant=\"dark\" type=\"submit\" block>\n                Create Account\n              </Button>\n\n            </Form>\n          </ Col>\n        </Row>\n\n        <Container style={{textAlign: 'center', marginBottom: '2rem'}} className=\"singup-button-conatiner\">\n          <Button\n            size=\"sm\"\n            variant=\"dark\"\n            className=\"signup-button\"\n            onClick={() => {this.handleClick('loginForm')}}>\n            Back to Sign In\n          </Button>\n\n          <Button\n            size=\"sm\"\n            variant=\"dark\"\n            className=\"signup-button\" onClick={() => {this.handleClick('about')}}>Back to About</Button>\n        </Container>\n\n      </Container>\n    );\n  }\n}\n\nexport default SignupForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../css/forgot-password-form.css';\n\nclass ForgotPasswordForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: ''\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleButtonText = this.handleButtonText.bind(this);\n    this.warning = this.warning.bind(this);\n  }\n\n  handleClick(action) {\n    this.props.handleToggle(action);\n  }\n\n  handleButtonText() {\n    if(!this.props.spinner) {\n      return 'Send Temporary Password';\n    } else {\n      return <Spinner size=\"sm\" animation=\"grow\" variant=\"light\" />\n    }\n  }\n\n  warning() {\n    if(this.props.showWarning) {\n      return <Alert\n      onClose={() => {this.props.closeWarning()}}\n      dismissible\n      variant=\"danger\">\n      That Email Is Not Registered\n      </Alert>\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.requestNewPassword(this.state.email);\n  }\n\n  handleChange(e) {\n    if(e.target.id === 'email') {this.setState({email: e.target.value})}\n  }\n\n  render() {\n    return(\n      <Container className=\"forgot-password-form\">\n        <Row>\n          <Col>\n            <Form onSubmit={this.handleSubmit}>\n              {this.warning()}\n              <h3>Forgot Password</h3>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Enter Your Email</Form.Label>\n                <Form.Control value={this.state.email} onChange={this.handleChange} type=\"email\" placeholder=\"Enter Email\" />\n              </Form.Group>\n\n              <Button className=\"forgot-password-button\" variant=\"dark\" type=\"submit\" block>\n                {this.handleButtonText()}\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n        <Container style={{textAlign: 'center'}} className=\"forgot-password-button-conatiner\">\n          <Button size=\"sm\" variant=\"dark\" className=\"about-button\" onClick={() => {this.handleClick('loginForm')}}>Back to Sign In</Button>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default ForgotPasswordForm;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport '../css/new-password-sent.css';\n\nclass NewPasswordSent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.handleToggle('loginForm');\n  }\n\n  render() {\n    return(\n      <Container className=\"new-password-sent-container\">\n        <Row>\n          <Col>\n            <p className=\"lead\">A temporary password has been sent to your email.</p>\n            <Button onClick={this.handleClick} variant=\"dark\">Return to Sign In</Button>\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default NewPasswordSent;\n","import React from 'react';\nimport ForgotPasswordForm from './ForgotPasswordForm';\nimport NewPasswordSent from './NewPasswordSent';\n\nclass ForgotPassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showForm: true,\n      showSpinner: false,\n      showWarning: false\n    };\n    this.requestNewPassword = this.requestNewPassword.bind(this);\n    this.handleDisplay = this.handleDisplay.bind(this);\n    this.closeWarning = this.closeWarning.bind(this);\n  }\n\n  handleDisplay() {\n    if(this.state.showForm) {\n      return <ForgotPasswordForm\n        handleToggle={this.props.handleToggle}\n        requestNewPassword={this.requestNewPassword}\n        spinner={this.state.showSpinner}\n        showWarning={this.state.showWarning}\n        closeWarning={this.closeWarning}\n      />;\n    } else {\n      //show message\n      return <NewPasswordSent handleToggle={this.props.handleToggle}/>;\n    }\n  }\n\n  closeWarning() {\n    this.setState({showWarning: false});\n  }\n\n  requestNewPassword(email) {\n    this.setState({showSpinner: true});\n    fetch('http://localhost:5000/forgotPassword', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'omit',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify({\n        email: email\n      })\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((response) => {\n        if(response.result) {\n          this.setState({showForm: false, showSpinner: false});\n        } else {\n          console.log(response);\n          this.setState({showTrue: false, showSpinner: false, showWarning: true});\n        }\n      });\n  }\n\n  render() {\n    return(\n      <div>\n        {this.handleDisplay()}\n      </div>\n    );\n  }\n};\n\nexport default ForgotPassword;\n","import React from 'react';\nimport LandingHeader from './LandingHeader';\nimport LoginForm from './LoginForm';\nimport About from './About';\nimport SignupForm from './SignupForm';\nimport ForgotPassword from './ForgotPassword';\n\nclass LandingPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'loginForm'\n    };\n\n    this.handleDisplay = this.handleDisplay.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle(action) {\n    window.scrollTo(0, 0);\n    if(action === 'loginForm') {\n      this.setState({show: 'loginForm'});\n    } else if(action === 'about') {\n      this.setState({show: 'about'});\n    } else if(action === 'signUpForm') {\n      this.setState({show: 'signUpForm'});\n    } else {\n      this.setState({show: 'forgotPassword'});\n    }\n  }\n\n  handleDisplay() {\n    if(this.state.show === 'loginForm') {\n      return <LoginForm handleLogin={this.props.handleLogin} handleToggle={this.handleToggle}/>;\n    } else if(this.state.show === 'about') {\n      return <About handleToggle={this.handleToggle}/>;\n    } else if(this.state.show === 'signUpForm') {\n      return <SignupForm handleToggle={this.handleToggle}/>;\n    } else {\n      return <ForgotPassword handleToggle={this.handleToggle}/>;\n    }\n  }\n\n  render() {\n    return(\n      <div>\n        <LandingHeader handleToggle={this.handleToggle}/>\n        {this.handleDisplay()}\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\n\nclass ReportCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleTitleClick = this.handleTitleClick.bind(this);\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    if(event.target.id === 'viewReport') this.props.changeView('viewReport', this.props.reportIndex);\n    if(event.target.id === 'deleteReport') this.props.showDeleteReportWarning(this.props.reportIndex);\n  }\n\n  handleTitleClick() {\n    this.props.changeView('viewReport', this.props.reportIndex)\n  }\n\n  render() {\n    return(\n      <Card style={{ width: '19rem', marginBottom: '3rem'}}>\n        <Card.Header variant=\"dark\">RA Report</Card.Header>\n        <Card.Body>\n          <Card.Title onClick={this.handleTitleClick} style={{cursor: 'pointer'}}>{this.props.report.name}</Card.Title>\n          <Card.Text>\n            {this.props.report.description}\n          </Card.Text>\n          <ButtonGroup>\n            <Button id=\"viewReport\" size=\"sm\" variant=\"outline-secondary\" onClick={this.handleClick}>View</Button>\n            <Button size=\"sm\" variant=\"outline-secondary\">Edit</Button>\n            <Button id=\"deleteReport\" size=\"sm\" variant=\"outline-secondary\" onClick={this.handleClick}>Delete</Button>\n          </ButtonGroup>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default ReportCard;\n","import React from 'react';\nimport ReportCard from './ReportCard';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nclass ReportList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAlert: false,\n      showModal: false,\n      deleteReportName: '',\n      deleteReportID: 0\n    };\n\n    this.createReport = this.createReport.bind(this);\n    this.showDeleteReportWarning = this.showDeleteReportWarning.bind(this);\n    this.updateReportData = this.updateReportData.bind(this);\n    this.deleteReport = this.deleteReport.bind(this);\n    this.handleAlert = this.handleAlert.bind(this);\n  }\n\n  handleAlert() {\n    if(this.state.showAlert) {\n      return <Alert onClose={() => {this.setState({showAlert: false})}} dismissible variant=\"success\">All Reports Updated</Alert>;\n    }\n  }\n\n  createReport(event) {\n    event.preventDefault();\n    this.props.changeView('createReport');\n  }\n\n  showDeleteReportWarning(reportIndex) {\n    let reports = this.props.reports.toArray();\n    this.setState({\n      showModal: true,\n      deleteReportName: reports[reportIndex].name,\n      deleteReportID: reports[reportIndex].reportid\n    });\n  }\n\n  updateReportData(event) {\n    event.preventDefault();\n    fetch('http://localhost:5000/updateReportData?userID=' + this.props.userInfo.userid)\n      .then(res => res.json())\n      .then((reports) => {\n        this.props.updateReports(reports);\n        this.setState({showAlert: true});\n      });\n  }\n\n  deleteReport(event) {\n    event.preventDefault();\n    fetch('http://localhost:5000/deleteReport?userID='+this.props.userInfo.userid+'&reportID='+this.state.deleteReportID)\n      .then(res => res.json())\n      .then((response) => {\n        console.log(response);\n        this.props.updateReports(response.reportData);\n        this.setState({showModal: false});\n      });\n  }\n\n  render() {\n    let reports = this.props.reports.toArray();\n    //convert the reports into an array of arrays (3 reports max each)\n\n    return(\n      <div>\n        <Jumbotron style={{backgroundColor: '#FFF', textAlign: 'center', padding: '92px 0px 92px 0px'}}>\n          <h1 style={{fontWeight: '300'}}>Reports</h1>\n          <p className=\"lead\">Welcome {this.props.userInfo.firstname}! Below are your reports.</p>\n          <Button onClick={this.createReport} style={{marginRight: '1rem'}}>Create New Report</Button>\n          <Button onClick={this.updateReportData} style={{marginLeft: '1rem'}}variant=\"dark\">Refresh Report Data</Button>\n        </Jumbotron>\n\n        <Modal show={this.state.showModal} onHide={() => this.setState({showModal: false})}>\n          <Modal.Header closeButton>\n            <Modal.Title>Delete Report</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Are you sure you want to delete your {this.state.deleteReportName} report?</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => {this.setState({showModal: false})}}>\n              Cancel\n            </Button>\n            <Button onClick={this.deleteReport} variant=\"danger\">\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <div style={{width: '80%', margin: '0 auto',}}>\n          {this.handleAlert()}\n          <div style={{display: 'flex', flexWrap:'wrap', width: '100%', margin: '0 auto', justifyContent: 'space-between'}} >\n          {\n            reports.map((report, index) => {\n              return(<ReportCard\n                showDeleteReportWarning={this.showDeleteReportWarning}\n                changeView={this.props.changeView}\n                report={report}\n                reportIndex={index}\n                key={report.reportid}/>\n              )\n            })\n          }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReportList;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../css/new-report-form.css';\nimport { WithContext as ReactTags } from 'react-tag-input';\n\nconst KeyCodes = {\n  comma: 188,\n  enter: 13,\n};\n\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n\nclass CreateReport extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      reportName: '',\n      reportDescription: '',\n      subreddits: [],\n      suggestions: [],\n      notifications: false,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleAddition = this.handleAddition.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n    this.createReport = this.createReport.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:5000/getSubreddits')\n      .then(res => res.json())\n      .then((result) => {\n        let subreddits = [];\n        result.forEach((value) => {\n          subreddits.push({text: value.subredditname, id: value.subredditname});\n        });\n        this.setState({suggestions: subreddits});\n      });\n  }\n\n  handleChange(event) {\n    if(event.target.id === 'reportName') this.setState({reportName: event.target.value});\n    if(event.target.id === 'reportDescription') this.setState({reportDescription: event.target.value});\n    if(event.target.id === 'notifications') this.setState({notifications: event.target.checked});\n  }\n\n  createReport(event) {\n    event.preventDefault();\n\n    let subreddits = this.state.subreddits.map(value => value.text);\n\n    fetch('http://localhost:5000/createReport', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'omit',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify({\n        userID: this.props.userID,\n        name: this.state.reportName,\n        description: this.state.reportDescription,\n        subreddits: subreddits,\n        notifications: this.state.notifications\n      })\n    })\n      .then(res => res.json())\n      .then((response) => {\n        if(response.reportCreated) {\n          this.props.changeView('reports');\n          this.props.updateReports(response.reportData)\n        } else {\n          //handle server error\n        }\n      });\n  }\n\n  handleClick() {\n    this.props.changeView('reports');\n  }\n\n  handleDelete(i) {\n    const { subreddits } = this.state;\n    this.setState({\n     subreddits: subreddits.filter((subreddit, index) => index !== i),\n    });\n  }\n\n  handleAddition(subreddit) {\n      this.setState(state => ({ subreddits: [...state.subreddits, subreddit] }));\n  }\n\n  handleDrag(subreddit, currPos, newPos) {\n      const subreddits = [...this.state.subreddits];\n      const newSubreddits = subreddits.slice();\n\n      newSubreddits.splice(currPos, 1);\n      newSubreddits.splice(newPos, 0, subreddit);\n\n      // re-render\n      this.setState({ subreddits: newSubreddits });\n  }\n\n  render() {\n    const { subreddits, suggestions } = this.state;\n    return(\n      <Container>\n        <Jumbotron style={{backgroundColor: '#FFF', textAlign: 'center', padding: '92px 0px 92px 0px'}}>\n          <h1 style={{fontWeight: '300'}}>Create Report</h1>\n          <p className=\"lead\">Use the form below to create a new report.</p>\n          <Button onClick={this.handleClick} style={{marginRight: '1rem'}}>Back to Reports</Button>\n        </Jumbotron>\n        <Row>\n          <Col>\n            <Form className=\"createReportForm\" onSubmit={this.createReport}>\n              <Form.Group controlId=\"reportName\">\n                <Form.Label>Report Name</Form.Label>\n                <Form.Control value={this.state.reportName} onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter a Report Name\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"reportDescription\">\n                <Form.Label>Report Description</Form.Label>\n                <Form.Control value={this.state.reportDescription} onChange={this.handleChange} as=\"textarea\" rows=\"3\" placeholder=\"Enter Report Description (or none at all)\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"subreddits\">\n                <Form.Label>Subreddits</Form.Label>\n                <ReactTags\n                  classNames={{\n                    tags: '',\n                    tagInput: 'tagInputClass',\n                    tagInputField: 'form-control',\n                    selected: 'selectedClass',\n                    tag: 'btn btn-secondary tag-button',\n                    remove: 'tag-button-remove'\n                  }}\n                  allowDeleteFromEmptyInput={false}\n                  tags={subreddits}\n                  suggestions={suggestions}\n                  handleDelete={this.handleDelete}\n                  handleAddition={this.handleAddition}\n                  handleDrag={this.handleDrag}\n                  delimiters={delimiters}\n                  placeholder={'Add a new subreddit'}\n                />\n\n              </Form.Group>\n\n              <Form.Group controlId=\"notifications\">\n                <Form.Check  value={this.state.reportDescription} onChange={this.handleChange} type=\"checkbox\" label=\"Email Notifications\" />\n              </Form.Group>\n\n              <Button variant=\"dark\" type=\"submit\" block>\n                Create Report\n              </Button>\n\n            </Form>\n          </ Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default CreateReport;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport '../css/subreddit-list.css';\n\nclass SubredditList extends React.Component {\n  render() {\n    return(\n      <div className=\"subredditList\">\n        {\n          this.props.subreddits.map((value, index) => {\n            return (<Button onClick={(event) => {event.preventDefault(); this.props.updateSubredditIndex(index)}} className=\"subreddit-button\" variant=\"secondary\" key={index}>{value}</Button>)\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default SubredditList;\n","import React from 'react';\nimport '../css/submissions.css';\n\nclass Submissions extends React.Component {\n  render() {\n    return(\n      <div className=\"submissions\">\n        <h2>{this.props.subredditName}</h2>\n        {\n          this.props.submissions.map((submission, index) => {\n            return(\n              <div key={submission.id} style={{padding: '3rem', marginBottom: '3rem', border: 'solid lightgray 2px', borderRadius: '5px'} }>\n                <p className=\"lead\">\n                  <a style={{color: '#333'}} rel=\"noopener noreferrer\" target=\"_blank\" href={submission.url}>{submission.title}</a>\n                </p>\n                <p>Posted By: {submission.handlename}</p>\n                <div style={{marginTop: '1.5rem', marginLeft: '3rem'}}>\n                  <p className=\"lead\">Top Comments</p>\n                  {\n                    submission.comments.map((comment, index) => {\n                      return(\n                        <p key={index}>{comment.handlename}: {comment.commenttext}</p>\n                      )\n                    })\n                  }\n                </div>\n              </div>\n            )\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default Submissions;\n","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport SubredditList from './SubredditList';\nimport Submissions from './Submissions';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Modal from 'react-bootstrap/Modal';\n\nclass ViewReport extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      subredditIndex: 0,\n      showSpinner: false,\n      showModal: false\n    }\n\n    this.handleClick = this.handleClick.bind(this);\n    this.showSubmissions = this.showSubmissions.bind(this);\n    this.updateSubredditIndex = this.updateSubredditIndex.bind(this);\n    this.updateReportData = this.updateReportData.bind(this);\n    this.handleSpinner = this.handleSpinner.bind(this);\n    this.showDeleteReportWarning = this.showDeleteReportWarning.bind(this);\n    this.deleteReport = this.deleteReport.bind(this);\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    this.props.changeView('reports');\n  }\n\n  handleSpinner() {\n    if(this.state.showSpinner) {\n      return <Spinner size=\"sm\" animation=\"grow\" variant=\"light\" />;\n    } else {\n      return 'Refresh Report Data';\n    }\n  }\n\n  showDeleteReportWarning() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  deleteReport(event) {\n    event.preventDefault();\n    fetch('http://localhost:5000/deleteReport?userID='+this.props.userInfo.userid+'&reportID='+this.props.report.reportid)\n      .then(res => res.json())\n      .then((response) => {\n        this.props.updateReports(response.reportData);\n        this.props.changeView('reports');\n      });\n  }\n\n  updateReportData(event) {\n    event.preventDefault();\n    fetch('http://localhost:5000/updateReportData?userID=' + this.props.userInfo.userid)\n      .then((res) => {\n        this.setState({showSpinner: true});\n        return res.json();\n      })\n      .then((reports) => {\n        this.setState({showSpinner: false});\n        this.props.updateReports(reports);\n        this.props.changeView('viewReport', this.props.reportIndex);\n      });\n  }\n\n  showSubmissions() {\n    return <Submissions\n      subredditName={this.props.report.subreddits[this.state.subredditIndex]}\n      submissions={this.props.report.submissions[this.state.subredditIndex]}\n    />;\n  }\n\n  updateSubredditIndex(index) {\n    this.setState({subredditIndex: index});\n  }\n\n  render() {\n    return(\n      <div>\n        <Modal show={this.state.showModal} onHide={() => this.setState({showModal: false})}>\n          <Modal.Header closeButton>\n            <Modal.Title>Delete Report</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Are you sure you want to delete your {this.props.report.name} report?</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => {this.setState({showModal: false})}}>\n              Cancel\n            </Button>\n            <Button onClick={this.deleteReport} variant=\"danger\">\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Jumbotron style={{backgroundColor: '#FFF', textAlign: 'center', padding: '92px 0px 92px 0px'}}>\n          <h1 style={{fontWeight: '300'}}>{this.props.report.name}</h1>\n          <p className=\"lead\">{this.props.report.description}</p>\n          <Button onClick={this.handleClick} style={{marginRight: '1rem'}}>Back to Reports</Button>\n          <Button onClick={this.updateReportData} style={{marginLeft: '1rem'}} variant=\"dark\">{this.handleSpinner()}</Button>\n          <Button onClick={(event) => {event.preventDefault(); this.showDeleteReportWarning()}} style={{marginRight: '1rem'}}>Delete Report</Button>\n        </Jumbotron>\n        <SubredditList updateSubredditIndex={this.updateSubredditIndex} subreddits={this.props.report.subreddits}/>\n        {this.showSubmissions()}\n      </div>\n    );\n  }\n}\n\nexport default ViewReport;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport ReportList from './ReportList';\nimport CreateReport from './CreateReport';\nimport ViewReport from './ViewReport';\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'reports',\n      reportIndex: 0\n    };\n\n    this.handleView = this.handleView.bind(this);\n    this.changeView = this.changeView.bind(this);\n  }\n\n  handleView() {\n    if(this.state.show === 'reports') {\n      return <ReportList\n        updateReports={this.props.updateReports}\n        changeView={this.changeView}\n        userInfo={this.props.userData}\n        reports={this.props.reports}\n      />;\n    } else if(this.state.show === 'createReport') {\n      return <CreateReport\n        updateReports={this.props.updateReports}\n        userID={this.props.userData.userid}\n        changeView={this.changeView}\n      />;\n    } else if(this.state.show === 'viewReport') {\n      let reports = this.props.reports.toArray();\n      return <ViewReport\n        reportIndex={this.state.reportIndex}\n        report={reports[this.state.reportIndex]}\n        changeView={this.changeView}\n        userInfo={this.props.userData}\n        updateReports={this.props.updateReports}\n      />;\n    }\n  }\n\n  changeView(view, reportIndex = null) {\n    window.scrollTo(0,0);\n    if(view === 'viewReport') {\n      this.setState({show: view, reportIndex: reportIndex});\n    } else {\n      this.setState({show: view});\n    }\n  }\n\n  render() {\n    return(\n      <div>\n        <Navbar style={{display: 'flex', justifyContent: 'space-between'}} bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand style={{cursor: 'pointer'}} onClick={() => {this.changeView('reports')}}>Reddit Aggregator</Navbar.Brand>\n          <DropdownButton variant=\"secondary\" id=\"dropdown-basic-button\" title=\"Menu\" alignRight>\n            <Dropdown.Item href=\"#/action-1\">Reports</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-2\">Create Report</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-3\">Account Settings</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-3\">Logout</Dropdown.Item>\n          </DropdownButton>\n        </Navbar>\n        {this.handleView()}\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport LandingPage from './components/LandingPage';\nimport Dashboard from './components/Dashboard';\nimport { List } from 'immutable';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userData: null,\n      loggedIn: false,\n      serverChecked: false,\n      initialLoad: true,\n      reports: []\n    };\n\n    this.handleDisplay = this.handleDisplay.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.updateReports = this.updateReports.bind(this);\n  }\n\n  componentDidMount() {\n    //run once to see if the user is logged in or not\n    fetch('http://localhost:5000/checkLoginStatus')\n      .then(res => res.json())\n      .then((result) => {\n        const reports = List(result.reportData);\n        console.log(reports);\n        this.setState({\n          loggedIn: result.loggedIn,\n          userData: result.userData,\n          serverChecked: true,\n          initialLoad: false,\n          reports: reports\n        });\n      });\n  }\n\n  updateReports(reportData) {\n    const reports = List(reportData);\n    this.setState({\n      reports: reports\n    });\n  }\n\n  handleDisplay() {\n    if(!this.state.initialLoad) {\n      if(this.state.loggedIn) {\n        return <Dashboard updateReports={this.updateReports} reports={this.state.reports} userData={this.state.userData} />;\n      } else {\n        return <LandingPage handleLogin={this.handleLogin} />;\n      }\n    }\n  }\n\n  handleLogin(response) {\n    const reports = List(response.reportData);\n    this.setState({\n      userData: response.userData,\n      loggedIn: response.loggedIn,\n      reports: reports\n    });\n  }\n\n  render() {\n    return(\n      <div className=\"app\">\n        {this.handleDisplay()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}