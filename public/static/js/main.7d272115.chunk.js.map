{"version":3,"sources":["components/LandingHeader.jsx","components/LoginForm.jsx","components/About.jsx","components/SignupForm.jsx","components/ForgotPasswordForm.jsx","components/NewPasswordSent.jsx","components/ForgotPassword.jsx","components/LandingPage.jsx","components/ReportCard.jsx","components/ReportList.jsx","components/CreateReport.jsx","components/SubredditList.jsx","components/Submissions.jsx","components/ViewReport.jsx","components/EditReport.jsx","components/AccountSettings.jsx","components/Dashboard.jsx","App.js","serviceWorker.js","index.js"],"names":["LandingHeader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","handleToggle","_this2","react_default","a","createElement","Jumbotron_default","style","cursor","onClick","className","React","Component","LoginForm","state","handle","password","rememberMe","showAlert","alert","handleChange","handleSubmit","handleAlert","event","target","id","setState","value","checked","preventDefault","fetch","then","response","json","loggedIn","handleLogin","reason","action","_this3","Alert_default","dismissible","onClose","variant","_this4","Container_default","Row_default","Col_default","Form_default","onSubmit","Group","controlId","Label","Control","onChange","type","placeholder","Check","label","Button_default","block","About","textAlign","size","SignupForm","createNewUser","username","email","passwordCheck","firstName","lastName","showWarning","warning","e","window","scrollTo","alertShown","method","mode","cache","credentials","headers","Content-Type","redirect","referrer","body","JSON","stringify","userCreated","required","marginBottom","ForgotPasswordForm","handleButtonText","spinner","Spinner_default","animation","closeWarning","requestNewPassword","NewPasswordSent","ForgotPassword","showForm","showSpinner","handleDisplay","components_ForgotPasswordForm","components_NewPasswordSent","result","console","log","showTrue","LandingPage","show","components_LoginForm","components_About","components_SignupForm","components_ForgotPassword","components_LandingHeader","ReportCard","handleTitleClick","changeView","reportIndex","showDeleteReportWarning","Card_default","width","Header","Body","Title","report","name","Text","description","ButtonGroup_default","ReportList","showModal","deleteReportName","deleteReportID","createReport","updateReportData","deleteReport","reports","toArray","reportid","userInfo","userid","res","updateReports","reportData","_this5","backgroundColor","padding","fontWeight","firstname","Modal_default","onHide","closeButton","Footer","margin","map","index","components_ReportCard","key","delimiters","CreateReport","reportName","reportDescription","subreddits","suggestions","handleDelete","handleAddition","handleDrag","forEach","push","text","subredditname","notifications","userID","reportCreated","i","filter","subreddit","concat","toConsumableArray","currPos","newPos","newSubreddits","slice","splice","_this$state","marginRight","as","rows","ReactTags","classNames","tags","tagInput","tagInputField","selected","tag","remove","allowDeleteFromEmptyInput","autofocus","SubredditList","updateSubredditIndex","Submissions","rel","href","subredditName","submissions","submission","border","borderRadius","color","url","title","handlename","marginTop","marginLeft","comments","comment","commenttext","ViewReport","subredditIndex","handleSpinner","components_SubredditList","components_Submissions","EditReport","editReport","reportID","reportEdited","AccountSettings","handleViewChange","updateUserInfo","changePassword","lastname","userData","updateUserData","passwordChanged","Dashboard","handleView","logout","components_ReportList","components_CreateReport","components_ViewReport","components_EditReport","components_AccountSettings","view","arguments","length","undefined","loggedOut","handleLogout","Navbar_default","display","justifyContent","bg","Brand","DropdownButton_default","alignRight","Dropdown_default","Item","App","serverChecked","initialLoad","List","components_Dashboard","components_LandingPage","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d272115.chunk.js","sourcesContent":["import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nclass LandingHeader extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.handleToggle('loginForm')\n  }\n\n  render() {\n    return(\n      <Jumbotron>\n        <h1 style={{cursor: 'pointer'}}onClick={() => {this.handleClick()}} className=\"display-4\">Reddit Aggregator</h1>\n        <p className=\"lead\">Personalized web app to collect the best daily Reddit submissions</p>\n      </Jumbotron>\n\n    );\n  };\n}\n\nexport default LandingHeader;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport '../css/login-form.css';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      handle: '',\n      password: '',\n      rememberMe: 0,\n      showAlert: false,\n      alert: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleAlert = this.handleAlert.bind(this);\n  }\n\n  handleChange(event) {\n    if(event.target.id === 'handle') {this.setState({handle: event.target.value})}\n    if(event.target.id === 'password') {this.setState({password: event.target.value})}\n    if(event.target.id === 'rememberMe') {this.setState({rememberMe: event.target.checked})}\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch('/login?handle=' +\n    this.state.handle + '&password=' + this.state.password +\n    '&rememberMe=' + this.state.rememberMe)\n      .then((response) => {\n        return response.json(response);\n      })\n      .then((response) => {\n        if(response.loggedIn) {\n          this.props.handleLogin(response);\n        } else {\n          let alert;\n          if(response.reason === 'password didn\\'t match') {\n            alert = 'Incorrect Password';\n          } else {\n            alert = 'Incorrect Username or Email';\n          }\n          this.setState({\n            showAlert: true,\n            alert: alert\n          });\n        }\n      });\n  }\n\n  handleClick(action) {\n    this.props.handleToggle(action);\n  }\n\n  handleAlert() {\n    if(this.state.showAlert) {\n      return <Alert dismissible onClose={() => {this.setState({showAlert: false})}} variant=\"danger\">{this.state.alert}</Alert>\n    }\n  }\n\n  render() {\n    return(\n      <Container className=\"login-form\">\n        <Row>\n          <Col>\n            <Form onSubmit={this.handleSubmit}>\n              {this.handleAlert()}\n              <h3>Please Sign In</h3>\n              <Form.Group controlId=\"handle\">\n                <Form.Label>Username or Email</Form.Label>\n                <Form.Control value={this.state.handle} onChange={this.handleChange} type=\"text\" placeholder=\"Enter Username or Email\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control value={this.state.password} onChange={this.handleChange} type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n              <Form.Group controlId=\"rememberMe\">\n                <Form.Check onChange={this.handleChange} type=\"checkbox\" label=\"Remember Me\" />\n              </Form.Group>\n              <Button variant=\"dark\" type=\"submit\" block>\n                Login\n              </Button>\n            </Form>\n            <p onClick={() => {this.handleClick('about')}}>New Here? Learn More &amp; Sign Up!</p>\n            <p onClick={() => {this.handleClick('forgotPassword')}}>Forgot Password?</p>\n          </ Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport '../css/about.css';\n\nclass About extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(action) {\n    if(action === 'loginForm') {\n      this.props.handleToggle(action);\n    } else {\n      this.props.handleToggle(action);\n    }\n  }\n\n  render() {\n    return(\n      <Container className=\"about\">\n        <h2>Who has time to be on Reddit all day?</h2>\n        <p>\n        Many Reddit posts get submitted throughout the day, and unless you can constantly check your reddit feed some content may be missed and buried by other submissions.</p>\n\n        <p>\n        Reddit Aggregator helps mitigate this problem by allowing you to create an account and submit a list of subreddits you enjoy. Reddit Aggregator will check the subreddits hourly and compile a list of entries throughout the day that match the subreddits you provide. These entries are bundled together into a nice readable format called a report. Users can have several reports for different purposes (each having their own set of subreddits).\n        </p>\n\n        <p className=\"lead\">\n        Sound cool? Go ahead and sign up, it just takes a minute.\n        </p>\n        <Container style={{textAlign: 'center'}} className=\"about-button-conatiner\">\n          <Button size=\"sm\" variant=\"dark\" className=\"about-button\" onClick={() => {this.handleClick('signUpForm')}}>Sign Up</Button>\n          <Button size=\"sm\" variant=\"dark\" className=\"about-button\" onClick={() => {this.handleClick('loginForm')}}>Back to Sign In</Button>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default About;\n","import React from 'react'\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport '../css/signup-form.css';\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.createNewUser = this.createNewUser.bind(this);\n    this.handleAlert = this.handleAlert.bind(this);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      passwordCheck: '',\n      firstName: '',\n      lastName: '',\n      showWarning: false,\n      warning: ''\n    }\n  }\n\n  handleClick(action) {\n    if(action === 'loginForm') {\n      this.props.handleToggle(action);\n    } else {\n      this.props.handleToggle(action);\n    }\n  }\n\n  handleChange(e) {\n    if(e.target.id === 'username') {this.setState({username: e.target.value})}\n    if(e.target.id === 'email') {this.setState({email: e.target.value})}\n    if(e.target.id === 'password') {this.setState({password: e.target.value})}\n    if(e.target.id === 'passwordCheck') {this.setState({passwordCheck: e.target.value})}\n    if(e.target.id === 'firstName') {this.setState({firstName: e.target.value})}\n    if(e.target.id === 'lastName') {this.setState({lastName: e.target.value})}\n  }\n\n  handleAlert() {\n    if(this.state.showWarning) {\n      window.scrollTo(0, 0);\n      return <Alert\n        onClose={() => {this.setState({showWarning: false, alertShown: false})}}\n        dismissible\n        variant=\"danger\">\n          {this.state.warning}\n      </Alert>;\n    }\n  }\n\n  createNewUser(event) {\n    event.preventDefault();\n    if(this.state.password === this.state.passwordCheck) {\n      //create new user\n      fetch('http://localhost:5000/createUser', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'omit',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrer: 'no-referrer',\n        body: JSON.stringify({\n          username: this.state.username,\n          email: this.state.email,\n          password: this.state.password,\n          firstName: this.state.firstName,\n          lastName: this.state.lastName\n        })\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((response) => {\n          if(response.userCreated) {\n\n          } else {\n            //show warning\n            if(response.reason === 'Error: username or email already exists') {\n              this.setState({showWarning: true, warning: 'Username and/or Email Already In Use'});\n            }\n          }\n        });\n    } else {\n      //send warning\n      this.setState({showWarning: true, warning: 'Passwords Do Not Match'});\n    }\n  }\n\n  render() {\n    return(\n      <Container className=\"signup-form\">\n        {this.handleAlert()}\n        <Row>\n          <Col>\n            <Form className=\"signupForm\" onSubmit={this.createNewUser}>\n\n              <h3>Sign Up</h3>\n              <Form.Group controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control value={this.state.username} onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter a Username\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control value={this.state.email} onChange={this.handleChange} required=\"required\" type=\"email\" placeholder=\"Enter your Email\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control value={this.state.password} onChange={this.handleChange} required=\"required\" type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"passwordCheck\">\n                <Form.Label>Retype Password</Form.Label>\n                <Form.Control value={this.state.passwordCheck} onChange={this.handleChange} required=\"required\" type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"firstName\">\n                <Form.Label>First Name</Form.Label>\n                <Form.Control value={this.state.firstName} onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter Your First Name\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"lastName\">\n                <Form.Label>Last Name</Form.Label>\n                <Form.Control  value={this.state.lastName} onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter Your Last Name\" />\n              </Form.Group>\n\n              <Button variant=\"dark\" type=\"submit\" block>\n                Create Account\n              </Button>\n\n            </Form>\n          </ Col>\n        </Row>\n\n        <Container style={{textAlign: 'center', marginBottom: '2rem'}} className=\"singup-button-conatiner\">\n          <Button\n            size=\"sm\"\n            variant=\"dark\"\n            className=\"signup-button\"\n            onClick={() => {this.handleClick('loginForm')}}>\n            Back to Sign In\n          </Button>\n\n          <Button\n            size=\"sm\"\n            variant=\"dark\"\n            className=\"signup-button\" onClick={() => {this.handleClick('about')}}>Back to About</Button>\n        </Container>\n\n      </Container>\n    );\n  }\n}\n\nexport default SignupForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../css/forgot-password-form.css';\n\nclass ForgotPasswordForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: ''\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleButtonText = this.handleButtonText.bind(this);\n    this.warning = this.warning.bind(this);\n  }\n\n  handleClick(action) {\n    this.props.handleToggle(action);\n  }\n\n  handleButtonText() {\n    if(!this.props.spinner) {\n      return 'Send Temporary Password';\n    } else {\n      return <Spinner size=\"sm\" animation=\"grow\" variant=\"light\" />\n    }\n  }\n\n  warning() {\n    if(this.props.showWarning) {\n      return <Alert\n      onClose={() => {this.props.closeWarning()}}\n      dismissible\n      variant=\"danger\">\n      That Email Is Not Registered\n      </Alert>\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.requestNewPassword(this.state.email);\n  }\n\n  handleChange(e) {\n    if(e.target.id === 'email') {this.setState({email: e.target.value})}\n  }\n\n  render() {\n    return(\n      <Container className=\"forgot-password-form\">\n        <Row>\n          <Col>\n            <Form onSubmit={this.handleSubmit}>\n              {this.warning()}\n              <h3>Forgot Password</h3>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Enter Your Email</Form.Label>\n                <Form.Control value={this.state.email} onChange={this.handleChange} type=\"email\" placeholder=\"Enter Email\" />\n              </Form.Group>\n\n              <Button className=\"forgot-password-button\" variant=\"dark\" type=\"submit\" block>\n                {this.handleButtonText()}\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n        <Container style={{textAlign: 'center'}} className=\"forgot-password-button-conatiner\">\n          <Button size=\"sm\" variant=\"dark\" className=\"about-button\" onClick={() => {this.handleClick('loginForm')}}>Back to Sign In</Button>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default ForgotPasswordForm;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport '../css/new-password-sent.css';\n\nclass NewPasswordSent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.handleToggle('loginForm');\n  }\n\n  render() {\n    return(\n      <Container className=\"new-password-sent-container\">\n        <Row>\n          <Col>\n            <p className=\"lead\">A temporary password has been sent to your email.</p>\n            <Button onClick={this.handleClick} variant=\"dark\">Return to Sign In</Button>\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default NewPasswordSent;\n","import React from 'react';\nimport ForgotPasswordForm from './ForgotPasswordForm';\nimport NewPasswordSent from './NewPasswordSent';\n\nclass ForgotPassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showForm: true,\n      showSpinner: false,\n      showWarning: false\n    };\n    this.requestNewPassword = this.requestNewPassword.bind(this);\n    this.handleDisplay = this.handleDisplay.bind(this);\n    this.closeWarning = this.closeWarning.bind(this);\n  }\n\n  handleDisplay() {\n    if(this.state.showForm) {\n      return <ForgotPasswordForm\n        handleToggle={this.props.handleToggle}\n        requestNewPassword={this.requestNewPassword}\n        spinner={this.state.showSpinner}\n        showWarning={this.state.showWarning}\n        closeWarning={this.closeWarning}\n      />;\n    } else {\n      //show message\n      return <NewPasswordSent handleToggle={this.props.handleToggle}/>;\n    }\n  }\n\n  closeWarning() {\n    this.setState({showWarning: false});\n  }\n\n  requestNewPassword(email) {\n    this.setState({showSpinner: true});\n    fetch('/forgotPassword', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'omit',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify({\n        email: email\n      })\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((response) => {\n        if(response.result) {\n          this.setState({showForm: false, showSpinner: false});\n        } else {\n          console.log(response);\n          this.setState({showTrue: false, showSpinner: false, showWarning: true});\n        }\n      });\n  }\n\n  render() {\n    return(\n      <div>\n        {this.handleDisplay()}\n      </div>\n    );\n  }\n};\n\nexport default ForgotPassword;\n","import React from 'react';\nimport LandingHeader from './LandingHeader';\nimport LoginForm from './LoginForm';\nimport About from './About';\nimport SignupForm from './SignupForm';\nimport ForgotPassword from './ForgotPassword';\n\nclass LandingPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'loginForm'\n    };\n\n    this.handleDisplay = this.handleDisplay.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle(action) {\n    window.scrollTo(0, 0);\n    if(action === 'loginForm') {\n      this.setState({show: 'loginForm'});\n    } else if(action === 'about') {\n      this.setState({show: 'about'});\n    } else if(action === 'signUpForm') {\n      this.setState({show: 'signUpForm'});\n    } else {\n      this.setState({show: 'forgotPassword'});\n    }\n  }\n\n  handleDisplay() {\n    if(this.state.show === 'loginForm') {\n      return <LoginForm handleLogin={this.props.handleLogin} handleToggle={this.handleToggle}/>;\n    } else if(this.state.show === 'about') {\n      return <About handleToggle={this.handleToggle}/>;\n    } else if(this.state.show === 'signUpForm') {\n      return <SignupForm handleToggle={this.handleToggle}/>;\n    } else {\n      return <ForgotPassword handleToggle={this.handleToggle}/>;\n    }\n  }\n\n  render() {\n    return(\n      <div>\n        <LandingHeader handleToggle={this.handleToggle}/>\n        {this.handleDisplay()}\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\n\nclass ReportCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleTitleClick = this.handleTitleClick.bind(this);\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    if(event.target.id === 'viewReport') this.props.changeView('viewReport', this.props.reportIndex);\n    if(event.target.id === 'editReport') this.props.changeView('editReport', this.props.reportIndex);\n    if(event.target.id === 'deleteReport') this.props.showDeleteReportWarning(this.props.reportIndex);\n  }\n\n  handleTitleClick() {\n    this.props.changeView('viewReport', this.props.reportIndex)\n  }\n\n  render() {\n    return(\n      <Card style={{ width: '19rem', marginBottom: '3rem'}}>\n        <Card.Header variant=\"dark\">RA Report</Card.Header>\n        <Card.Body>\n          <Card.Title onClick={this.handleTitleClick} style={{cursor: 'pointer'}}>{this.props.report.name}</Card.Title>\n          <Card.Text>\n            {this.props.report.description}\n          </Card.Text>\n          <ButtonGroup>\n            <Button id=\"viewReport\" size=\"sm\" variant=\"outline-secondary\" onClick={this.handleClick}>View</Button>\n            <Button id=\"editReport\" size=\"sm\" variant=\"outline-secondary\" onClick={this.handleClick}>Edit</Button>\n            <Button id=\"deleteReport\" size=\"sm\" variant=\"outline-secondary\" onClick={this.handleClick}>Delete</Button>\n          </ButtonGroup>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default ReportCard;\n","import React from 'react';\nimport ReportCard from './ReportCard';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport '../css/report-list.css';\n\nclass ReportList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAlert: false,\n      showModal: false,\n      deleteReportName: '',\n      deleteReportID: 0\n    };\n\n    this.createReport = this.createReport.bind(this);\n    this.showDeleteReportWarning = this.showDeleteReportWarning.bind(this);\n    this.updateReportData = this.updateReportData.bind(this);\n    this.deleteReport = this.deleteReport.bind(this);\n    this.handleAlert = this.handleAlert.bind(this);\n  }\n\n  handleAlert() {\n    if(this.state.showAlert) {\n      return <Alert onClose={() => {this.setState({showAlert: false})}} dismissible variant=\"success\">All Reports Updated</Alert>;\n    }\n  }\n\n  createReport(event) {\n    event.preventDefault();\n    this.props.changeView('createReport');\n  }\n\n  showDeleteReportWarning(reportIndex) {\n    let reports = this.props.reports.toArray();\n    this.setState({\n      showModal: true,\n      deleteReportName: reports[reportIndex].name,\n      deleteReportID: reports[reportIndex].reportid\n    });\n  }\n\n  updateReportData(event) {\n    event.preventDefault();\n    fetch('http://localhost:5000/updateReportData?userID=' + this.props.userInfo.userid)\n      .then(res => res.json())\n      .then((reports) => {\n        this.props.updateReports(reports);\n        this.setState({showAlert: true});\n      });\n  }\n\n  deleteReport(event) {\n    event.preventDefault();\n    fetch('http://localhost:5000/deleteReport?userID='+this.props.userInfo.userid+'&reportID='+this.state.deleteReportID)\n      .then(res => res.json())\n      .then((response) => {\n        console.log(response);\n        this.props.updateReports(response.reportData);\n        this.setState({showModal: false});\n      });\n  }\n\n  render() {\n    let reports = this.props.reports.toArray();\n    //convert the reports into an array of arrays (3 reports max each)\n\n    return(\n      <div>\n        <Jumbotron style={{backgroundColor: '#FFF', textAlign: 'center', padding: '92px 0px 92px 0px'}}>\n          <h1 style={{fontWeight: '300'}}>Reports</h1>\n          <p className=\"lead\">Welcome {this.props.userInfo.firstname}! Below are your reports.</p>\n          <div className=\"button-container\">\n            <Button className=\"action-button\" onClick={this.createReport}>Create New Report</Button>\n            <Button className=\"action-button\" onClick={this.updateReportData} variant=\"dark\">Refresh Report Data</Button>\n          </div>\n        </Jumbotron>\n\n        <Modal show={this.state.showModal} onHide={() => this.setState({showModal: false})}>\n          <Modal.Header closeButton>\n            <Modal.Title>Delete Report</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Are you sure you want to delete your {this.state.deleteReportName} report?</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => {this.setState({showModal: false})}}>\n              Cancel\n            </Button>\n            <Button onClick={this.deleteReport} variant=\"danger\">\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <div style={{width: '80%', margin: '0 auto',}}>\n          {this.handleAlert()}\n          <div className=\"grid\">\n          {\n            reports.map((report, index) => {\n              return(<ReportCard\n                showDeleteReportWarning={this.showDeleteReportWarning}\n                changeView={this.props.changeView}\n                report={report}\n                reportIndex={index}\n                key={report.reportid}/>\n              )\n            })\n          }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReportList;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../css/report-form.css';\nimport { WithContext as ReactTags } from 'react-tag-input';\n\nconst KeyCodes = {\n  comma: 188,\n  enter: 13,\n};\n\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n\nclass CreateReport extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      reportName: '',\n      reportDescription: '',\n      subreddits: [],\n      suggestions: []\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleAddition = this.handleAddition.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n    this.createReport = this.createReport.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('/getSubreddits')\n      .then(res => res.json())\n      .then((result) => {\n        let subreddits = [];\n        result.forEach((value) => {\n          subreddits.push({text: value.subredditname, id: value.subredditname});\n        });\n        this.setState({suggestions: subreddits});\n      });\n  }\n\n  handleChange(event) {\n    if(event.target.id === 'reportName') this.setState({reportName: event.target.value});\n    if(event.target.id === 'reportDescription') this.setState({reportDescription: event.target.value});\n    if(event.target.id === 'notifications') this.setState({notifications: event.target.checked});\n  }\n\n  createReport(event) {\n    event.preventDefault();\n\n    let subreddits = this.state.subreddits.map(value => value.text);\n\n    fetch('/createReport', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'omit',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify({\n        userID: this.props.userID,\n        name: this.state.reportName,\n        description: this.state.reportDescription,\n        subreddits: subreddits,\n        notifications: false\n      })\n    })\n      .then(res => res.json())\n      .then((response) => {\n        if(response.reportCreated) {\n          this.props.changeView('reports');\n          this.props.updateReports(response.reportData)\n        } else {\n          //handle server error\n        }\n      });\n  }\n\n  handleClick() {\n    this.props.changeView('reports');\n  }\n\n  handleDelete(i) {\n    const { subreddits } = this.state;\n    this.setState({\n     subreddits: subreddits.filter((subreddit, index) => index !== i),\n    });\n  }\n\n  handleAddition(subreddit) {\n      this.setState(state => ({ subreddits: [...state.subreddits, subreddit] }));\n  }\n\n  handleDrag(subreddit, currPos, newPos) {\n      const subreddits = [...this.state.subreddits];\n      const newSubreddits = subreddits.slice();\n\n      newSubreddits.splice(currPos, 1);\n      newSubreddits.splice(newPos, 0, subreddit);\n\n      // re-render\n      this.setState({ subreddits: newSubreddits });\n  }\n\n  render() {\n    const { subreddits, suggestions } = this.state;\n    return(\n      <Container>\n        <Jumbotron style={{backgroundColor: '#FFF', textAlign: 'center', padding: '92px 0px 92px 0px'}}>\n          <h1 style={{fontWeight: '300'}}>Create Report</h1>\n          <p className=\"lead\">Use the form below to create a new report.</p>\n          <Button onClick={this.handleClick} style={{marginRight: '1rem'}}>Back to Reports</Button>\n        </Jumbotron>\n        <Row>\n          <Col>\n            <Form className=\"createReportForm\" onSubmit={this.createReport}>\n              <Form.Group controlId=\"reportName\">\n                <Form.Label>Report Name</Form.Label>\n                <Form.Control value={this.state.reportName} onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter a Report Name\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"reportDescription\">\n                <Form.Label>Report Description</Form.Label>\n                <Form.Control value={this.state.reportDescription} onChange={this.handleChange} as=\"textarea\" rows=\"3\" placeholder=\"Enter Report Description (or none at all)\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"subreddits\">\n                <Form.Label>Subreddits</Form.Label>\n                <ReactTags\n                  classNames={{\n                    tags: '',\n                    tagInput: 'tagInputClass',\n                    tagInputField: 'form-control',\n                    selected: 'selectedClass',\n                    tag: 'btn btn-secondary tag-button',\n                    remove: 'tag-button-remove'\n                  }}\n                  allowDeleteFromEmptyInput={false}\n                  tags={subreddits}\n                  suggestions={suggestions}\n                  handleDelete={this.handleDelete}\n                  handleAddition={this.handleAddition}\n                  handleDrag={this.handleDrag}\n                  delimiters={delimiters}\n                  placeholder={'Add a new subreddit'}\n                  autofocus={false}\n                />\n\n              </Form.Group>\n\n              <Button variant=\"dark\" type=\"submit\" block>\n                Create Report\n              </Button>\n\n            </Form>\n          </ Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default CreateReport;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport '../css/subreddit-list.css';\n\nclass SubredditList extends React.Component {\n  render() {\n    return(\n      <div className=\"subredditList\">\n        {\n          this.props.subreddits.map((value, index) => {\n            return (<Button onClick={(event) => {event.preventDefault(); this.props.updateSubredditIndex(index)}} className=\"subreddit-button\" variant=\"secondary\" key={index}>{value}</Button>)\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default SubredditList;\n","import React from 'react';\nimport '../css/submissions.css';\n\nclass Submissions extends React.Component {\n  render() {\n    return(\n      <div className=\"submissions\">\n        <h2><a rel=\"noopener noreferrer\" target=\"_blank\" href={'https://www.reddit.com/r/' + this.props.subredditName}>{this.props.subredditName}</a></h2>\n        {\n          this.props.submissions.map((submission, index) => {\n            return(\n              <div key={index} style={{padding: '3rem', marginBottom: '3rem', border: 'solid lightgray 2px', borderRadius: '5px'} }>\n                <p className=\"lead\">\n                  <a style={{color: '#333'}} rel=\"noopener noreferrer\" target=\"_blank\" href={submission.url}>{submission.title}</a>\n                </p>\n                <p>Posted By: {submission.handlename}</p>\n                <div style={{marginTop: '1.5rem', marginLeft: '3rem'}}>\n                  <p className=\"lead\">Top Comments</p>\n                  {\n                    submission.comments.map((comment, index) => {\n                      return(\n                        <p key={index}>{comment.handlename}: {comment.commenttext}</p>\n                      )\n                    })\n                  }\n                </div>\n              </div>\n            )\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default Submissions;\n","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport SubredditList from './SubredditList';\nimport Submissions from './Submissions';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Modal from 'react-bootstrap/Modal';\nimport '../css/view-report.css';\n\nclass ViewReport extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      subredditIndex: 0,\n      showSpinner: false,\n      showModal: false\n    }\n\n    this.handleClick = this.handleClick.bind(this);\n    this.updateSubredditIndex = this.updateSubredditIndex.bind(this);\n    this.updateReportData = this.updateReportData.bind(this);\n    this.handleSpinner = this.handleSpinner.bind(this);\n    this.showDeleteReportWarning = this.showDeleteReportWarning.bind(this);\n    this.deleteReport = this.deleteReport.bind(this);\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    this.props.changeView('reports');\n  }\n\n  handleSpinner() {\n    if(this.state.showSpinner) {\n      return <Spinner size=\"sm\" animation=\"grow\" variant=\"light\" />;\n    } else {\n      return 'Refresh Report Data';\n    }\n  }\n\n  showDeleteReportWarning() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  deleteReport(event) {\n    event.preventDefault();\n    fetch('http://localhost:5000/deleteReport?userID='+this.props.userInfo.userid+'&reportID='+this.props.report.reportid)\n      .then(res => res.json())\n      .then((response) => {\n        this.props.updateReports(response.reportData);\n        this.props.changeView('reports');\n      });\n  }\n\n  updateReportData(event) {\n    event.preventDefault();\n    fetch('http://localhost:5000/updateReportData?userID=' + this.props.userInfo.userid)\n      .then((res) => {\n        this.setState({showSpinner: true});\n        return res.json();\n      })\n      .then((reports) => {\n        this.setState({showSpinner: false});\n        this.props.updateReports(reports);\n        this.props.changeView('viewReport', this.props.reportIndex);\n      });\n  }\n\n  updateSubredditIndex(index) {\n    this.setState({subredditIndex: index});\n  }\n\n  render() {\n    return(\n      <div>\n        <Modal show={this.state.showModal} onHide={() => this.setState({showModal: false})}>\n          <Modal.Header closeButton>\n            <Modal.Title>Delete Report</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Are you sure you want to delete your {this.props.report.name} report?</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => {this.setState({showModal: false})}}>\n              Cancel\n            </Button>\n            <Button onClick={this.deleteReport} variant=\"danger\">\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Jumbotron style={{backgroundColor: '#FFF', textAlign: 'center', padding: '92px 0px 92px 0px'}}>\n          <h1 style={{fontWeight: '300'}}>{this.props.report.name}</h1>\n          <p className=\"lead\">{this.props.report.description}</p>\n          <div className=\"button-container\">\n            <Button className=\"action-button\" onClick={this.handleClick} >Back to Reports</Button>\n            <Button className=\"action-button\" onClick={this.updateReportData} variant=\"dark\">{this.handleSpinner()}</Button>\n            <Button className=\"action-button\" onClick={(event) => {event.preventDefault(); this.showDeleteReportWarning()}}>Delete Report</Button>\n          </div>\n        </Jumbotron>\n        <SubredditList updateSubredditIndex={this.updateSubredditIndex} subreddits={this.props.report.subreddits}/>\n        <Submissions\n          subredditName={this.props.report.subreddits[this.state.subredditIndex]}\n          submissions={this.props.report.submissions[this.state.subredditIndex]}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ViewReport;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../css/report-form.css';\nimport { WithContext as ReactTags } from 'react-tag-input';\n\nconst KeyCodes = {\n  comma: 188,\n  enter: 13,\n};\n\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n\nclass EditReport extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      reportName: '',\n      reportDescription: '',\n      subreddits: [],\n      suggestions: []\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleAddition = this.handleAddition.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n    this.editReport = this.editReport.bind(this);\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    this.props.changeView('reports');\n  }\n\n  handleChange(event) {\n    if(event.target.id === 'reportName') this.setState({reportName: event.target.value});\n    if(event.target.id === 'reportDescription') this.setState({reportDescription: event.target.value});\n    if(event.target.id === 'notifications') this.setState({notifications: event.target.checked});\n  }\n\n  handleDelete(i) {\n    const { subreddits } = this.state;\n    this.setState({\n     subreddits: subreddits.filter((subreddit, index) => index !== i),\n    });\n  }\n\n  handleAddition(subreddit) {\n      this.setState(state => ({ subreddits: [...state.subreddits, subreddit] }));\n  }\n\n  handleDrag(subreddit, currPos, newPos) {\n      const subreddits = [...this.state.subreddits];\n      const newSubreddits = subreddits.slice();\n\n      newSubreddits.splice(currPos, 1);\n      newSubreddits.splice(newPos, 0, subreddit);\n\n      // re-render\n      this.setState({ subreddits: newSubreddits });\n  }\n\n  componentDidMount() {\n    let subreddits = this.props.report.subreddits.map(value => { return {id: value, text: value}});\n    this.setState({\n      reportName: this.props.report.name,\n      reportDescription: this.props.report.description,\n      subreddits: subreddits\n    });\n  }\n\n  editReport(event) {\n    event.preventDefault();\n\n    let subreddits = this.state.subreddits.map(value => value.text);\n\n    fetch('/editReport', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'omit',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify({\n        userID: this.props.userInfo.userid,\n        reportID: this.props.report.reportid,\n        name: this.state.reportName,\n        description: this.state.reportDescription,\n        subreddits: subreddits,\n        notifications: false\n      })\n    })\n      .then(res => res.json())\n      .then((response) => {\n        if(response.reportEdited) {\n          this.props.changeView('reports');\n          this.props.updateReports(response.reportData)\n        } else {\n          //handle server error\n        }\n      });\n  }\n\n  render() {\n    const { subreddits, suggestions } = this.state;\n    return(\n      <Container>\n        <Jumbotron style={{backgroundColor: '#FFF', textAlign: 'center', padding: '92px 0px 92px 0px'}}>\n          <h1 style={{fontWeight: '300'}}>Edit {this.props.report.name} Report</h1>\n          <p className=\"lead\">Use the form below to edit the report.</p>\n          <Button onClick={this.handleClick} style={{marginRight: '1rem'}}>Back to Reports</Button>\n        </Jumbotron>\n        <Row>\n          <Col>\n            <Form className=\"editReportForm\" onSubmit={this.editReport}>\n              <Form.Group controlId=\"reportName\">\n                <Form.Label>Report Name</Form.Label>\n                <Form.Control value={this.state.reportName} onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter a Report Name\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"reportDescription\">\n                <Form.Label>Report Description</Form.Label>\n                <Form.Control value={this.state.reportDescription} onChange={this.handleChange} as=\"textarea\" rows=\"3\" placeholder=\"Enter Report Description (or none at all)\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"subreddits\">\n                <Form.Label>Subreddits</Form.Label>\n                <ReactTags\n                  classNames={{\n                    tags: '',\n                    tagInput: 'tagInputClass',\n                    tagInputField: 'form-control',\n                    selected: 'selectedClass',\n                    tag: 'btn btn-secondary tag-button',\n                    remove: 'tag-button-remove'\n                  }}\n                  allowDeleteFromEmptyInput={false}\n                  tags={subreddits}\n                  suggestions={suggestions}\n                  handleDelete={this.handleDelete}\n                  handleAddition={this.handleAddition}\n                  handleDrag={this.handleDrag}\n                  delimiters={delimiters}\n                  placeholder={'Add a new subreddit'}\n                  autofocus={false}\n                />\n\n              </Form.Group>\n\n              <Button variant=\"dark\" type=\"submit\" block>\n                Edit Report\n              </Button>\n\n            </Form>\n          </ Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default EditReport;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Alert from 'react-bootstrap/Alert';\nimport '../css/account-settings-form.css';\n\nclass AccountSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      firstName: '',\n      lastName: '',\n      password: '',\n      passwordCheck: '',\n      showAlert: false,\n      alert: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleViewChange = this.handleViewChange.bind(this);\n    this.handleAlert = this.handleAlert.bind(this);\n    this.updateUserInfo = this.updateUserInfo.bind(this);\n    this.changePassword = this.changePassword.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      username: this.props.userInfo.username,\n      email: this.props.userInfo.email,\n      firstName: this.props.userInfo.firstname,\n      lastName: this.props.userInfo.lastname\n    });\n  }\n\n  handleChange(e) {\n    if(e.target.id === 'username') this.setState({username: e.target.value});\n    if(e.target.id === 'email') this.setState({email: e.target.value});\n    if(e.target.id === 'firstName') this.setState({firstName: e.target.value});\n    if(e.target.id === 'lastName') this.setState({lastName: e.target.value});\n    if(e.target.id === 'password') this.setState({password: e.target.value});\n    if(e.target.id === 'passwordCheck') this.setState({passwordCheck: e.target.value});\n  }\n\n  handleViewChange(e) {\n    e.preventDefault();\n    this.props.changeView('reports');\n  }\n\n  handleAlert() {\n    if(this.state.showAlert) {\n      if(this.state.alert === 'Passwords do not match') {\n        return <Alert onClose={() => {this.setState({showAlert: false})}} dismissible variant=\"danger\">{this.state.alert}</Alert>;\n      } else {\n        return <Alert onClose={() => {this.setState({showAlert: false})}} dismissible variant=\"success\">{this.state.alert}</Alert>;\n        }\n      }\n  }\n\n  updateUserInfo(event) {\n    event.preventDefault();\n    fetch('/editUser', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'omit',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify({\n        userID: this.props.userInfo.userid,\n        userData: {\n          username: this.state.username,\n          email: this.state.email,\n          firstName: this.state.firstName,\n          lastName: this.state.lastName\n        }\n      })\n    })\n      .then((res => res.json()))\n      .then((response) => {\n        this.setState({\n          showAlert: true,\n          alert: 'Your account info has been updated'\n        }, () => {\n          window.scrollTo(0, 0);\n          this.props.updateUserData(response.userData);\n        });\n      });\n  }\n\n  changePassword(event) {\n    event.preventDefault();\n    if(this.state.password === this.state.passwordCheck) {\n      fetch('/changePassword', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'omit',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrer: 'no-referrer',\n        body: JSON.stringify({\n          userID: this.props.userInfo.userid,\n          password: this.state.password\n        })\n      })\n        .then((res => res.json()))\n        .then((response) => {\n          if(response.passwordChanged === true) {\n            this.setState({\n              showAlert: true,\n              alert: 'Your password has been changed'\n            }, () => {\n              window.scrollTo(0, 0);\n            });\n          }\n        });\n    } else {\n      this.setState({\n        showAlert: true,\n        alert: 'Passwords do not match'\n      }, () => {\n        window.scrollTo(0, 0);\n      });\n    }\n  }\n\n  render() {\n    return(\n      <div>\n        <Jumbotron style={{backgroundColor: '#FFF', textAlign: 'center', padding: '92px 0px 92px 0px'}}>\n          <h1 style={{fontWeight: '300'}}>Account Settings</h1>\n          <p className=\"lead\">Use the form below to edit your account settings.</p>\n          <Button onClick={this.handleViewChange} style={{marginRight: '1rem'}}>Back to Reports</Button>\n        </Jumbotron>\n        <Form onSubmit={this.updateUserInfo} className=\"signup-form\">\n          {this.handleAlert()}\n          <h2>User Info</h2>\n          <Form.Group>\n            <Form.Label>Username</Form.Label>\n            <Form.Control value={this.state.username} id=\"username\" onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter a Username\" />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control value={this.state.email} id=\"email\" onChange={this.handleChange} required=\"required\" type=\"email\" placeholder=\"Enter your Email\" />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>First Name</Form.Label>\n            <Form.Control value={this.state.firstName} id=\"firstName\" onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter Your First Name\" />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control value={this.state.lastName} id=\"lastName\" onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter Your Last Name\" />\n          </Form.Group>\n\n          <Button variant=\"dark\" type=\"submit\" block>\n            Update User Info\n          </Button>\n        </Form>\n        <Form style={{marginTop: '3rem'}}className=\"signup-form password-form\" onSubmit={this.changePassword}>\n          <h2>Change Password</h2>\n          <Form.Group>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control value={this.state.password} id=\"password\" onChange={this.handleChange} required=\"required\" type=\"password\" placeholder=\"Enter a Username\" />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Re-type Password</Form.Label>\n            <Form.Control value={this.state.passwordCheck} id=\"passwordCheck\" onChange={this.handleChange} required=\"required\" type=\"password\" placeholder=\"Enter your Email\" />\n          </Form.Group>\n\n          <Button variant=\"dark\" type=\"submit\" block>\n            Change Password\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default AccountSettings;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport ReportList from './ReportList';\nimport CreateReport from './CreateReport';\nimport ViewReport from './ViewReport';\nimport EditReport from './EditReport';\nimport AccountSettings from './AccountSettings';\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'reports',\n      reportIndex: 0\n    };\n\n    this.handleView = this.handleView.bind(this);\n    this.changeView = this.changeView.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  handleView() {\n    window.scrollTo(0, 0);\n    if(this.state.show === 'reports') {\n      return <ReportList\n        updateReports={this.props.updateReports}\n        changeView={this.changeView}\n        userInfo={this.props.userData}\n        reports={this.props.reports}\n      />;\n    } else if(this.state.show === 'createReport') {\n      return <CreateReport\n        updateReports={this.props.updateReports}\n        userID={this.props.userData.userid}\n        changeView={this.changeView}\n      />;\n    } else if(this.state.show === 'viewReport') {\n      let reports = this.props.reports.toArray();\n      return <ViewReport\n        reportIndex={this.state.reportIndex}\n        report={reports[this.state.reportIndex]}\n        changeView={this.changeView}\n        userInfo={this.props.userData}\n        updateReports={this.props.updateReports}\n      />;\n    } else if(this.state.show === 'editReport') {\n      let reports = this.props.reports.toArray();\n      return <EditReport\n        reportIndex={this.state.reportIndex}\n        report={reports[this.state.reportIndex]}\n        changeView={this.changeView}\n        userInfo={this.props.userData}\n        updateReports={this.props.updateReports}\n      />;\n    } else {\n      return <AccountSettings\n        userInfo={this.props.userData}\n        changeView={this.changeView}\n        updateUserData={this.props.updateUserData}\n      />;\n    }\n  }\n\n  changeView(view, reportIndex = null) {\n    window.scrollTo(0,0);\n    if(view === 'viewReport' || view === 'editReport') {\n      this.setState({show: view, reportIndex: reportIndex});\n    } else {\n      this.setState({show: view});\n    }\n  }\n\n  logout() {\n    fetch('/logout')\n      .then(res => res.json())\n      .then((response) => {\n        if(response.loggedOut) {\n          this.props.handleLogout();\n        }\n      });\n  }\n\n  render() {\n    return(\n      <div>\n        <Navbar style={{display: 'flex', justifyContent: 'space-between'}} bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand style={{cursor: 'pointer'}} onClick={() => {this.changeView('reports')}}>Reddit Aggregator</Navbar.Brand>\n          <DropdownButton variant=\"secondary\" id=\"dropdown-basic-button\" title=\"Menu\" alignRight>\n            <Dropdown.Item onClick={() => {this.setState({show: 'reports'})}}>Reports</Dropdown.Item>\n            <Dropdown.Item onClick={() => {this.setState({show: 'createReport'})}}>Create Report</Dropdown.Item>\n            <Dropdown.Item onClick={() => {this.setState({show: 'AccountSettings'})}}>Account Settings</Dropdown.Item>\n            <Dropdown.Item onClick={() => {this.logout()}}>Logout</Dropdown.Item>\n          </DropdownButton>\n        </Navbar>\n        {this.handleView()}\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport LandingPage from './components/LandingPage';\nimport Dashboard from './components/Dashboard';\nimport { List } from 'immutable';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userData: null,\n      loggedIn: false,\n      serverChecked: false,\n      initialLoad: true,\n      reports: []\n    };\n\n    this.handleDisplay = this.handleDisplay.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.updateReports = this.updateReports.bind(this);\n    this.updateUserData = this.updateUserData.bind(this);\n  }\n\n  componentDidMount() {\n    //run once to see if the user is logged in or not\n    fetch('/checkLoginStatus')\n      .then(res => res.json())\n      .then((result) => {\n        const reports = List(result.reportData);\n        this.setState({\n          loggedIn: result.loggedIn,\n          userData: result.userData,\n          serverChecked: true,\n          initialLoad: false,\n          reports: reports\n        });\n      });\n  }\n\n  updateReports(reportData) {\n    const reports = List(reportData);\n    this.setState({\n      reports: reports\n    });\n  }\n\n  updateUserData(userData) {\n    console.log(userData);\n    this.setState({\n      userData: userData\n    });\n  }\n\n  handleDisplay() {\n    if(!this.state.initialLoad) {\n      if(this.state.loggedIn) {\n        return <Dashboard\n          updateReports={this.updateReports}\n          updateUserData={this.updateUserData}\n          reports={this.state.reports}\n          userData={this.state.userData}\n          handleLogout={this.handleLogout}\n        />;\n      } else {\n        return <LandingPage handleLogin={this.handleLogin} />;\n      }\n    }\n  }\n\n  handleLogin(response) {\n    const reports = List(response.reportData);\n    this.setState({\n      userData: response.userData,\n      loggedIn: response.loggedIn,\n      reports: reports\n    });\n  }\n\n  handleLogout() {\n    this.setState({\n      userData: {},\n      loggedIn: false,\n      reports: []\n    });\n  }\n\n  render() {\n    return(\n      <div className=\"app\">\n        {this.handleDisplay()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}