{"version":3,"sources":["components/LandingHeader.jsx","components/LoginForm.jsx","components/About.jsx","components/SignupForm.jsx","components/ForgotPasswordForm.jsx","components/NewPasswordSent.jsx","components/ForgotPassword.jsx","components/LandingPage.jsx","components/ReportCard.jsx","components/ReportList.jsx","components/Dashboard.jsx","App.js","serviceWorker.js","index.js"],"names":["LandingHeader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","handleToggle","_this2","react_default","a","createElement","Jumbotron_default","style","cursor","onClick","className","React","Component","LoginForm","state","handle","password","rememberMe","handleChange","handleSubmit","event","target","id","setState","value","checked","preventDefault","fetch","then","response","json","loggedIn","handleLogin","action","_this3","Container_default","Row_default","Col_default","Form_default","onSubmit","Group","controlId","Label","Control","onChange","type","placeholder","Check","label","Button_default","variant","block","About","textAlign","size","SignupForm","createNewUser","handleAlert","username","email","passwordCheck","firstName","lastName","showWarning","warning","e","window","scrollTo","Alert_default","onClose","alertShown","dismissible","method","mode","cache","credentials","headers","Content-Type","redirect","referrer","body","JSON","stringify","userCreated","reason","_this4","required","marginBottom","ForgotPasswordForm","handleButtonText","spinner","Spinner_default","animation","closeWarning","requestNewPassword","NewPasswordSent","ForgotPassword","showForm","showSpinner","handleDisplay","components_ForgotPasswordForm","components_NewPasswordSent","result","console","log","showTrue","LandingPage","show","components_LoginForm","components_About","components_SignupForm","components_ForgotPassword","components_LandingHeader","ReportCard","Card_default","width","margin","Header","as","Body","Title","report","name","Text","description","ButtonGroup_default","ReportList","reportGroupArray","reportData","length","push","splice","map","reportGroup","groupIndex","key","index","components_ReportCard","Dashboard","Navbar_default","bg","Brand","href","Nav_default","Link","backgroundColor","padding","fontWeight","userData","firstname","marginRight","marginLeft","components_ReportList","reports","App","serverCheck","components_Dashboard","components_LandingPage","user","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83853208.chunk.js","sourcesContent":["import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nclass LandingHeader extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.handleToggle('loginForm')\n  }\n\n  render() {\n    return(\n      <Jumbotron>\n        <h1 style={{cursor: 'pointer'}}onClick={() => {this.handleClick()}} className=\"display-4\">Reddit Aggregator</h1>\n        <p className=\"lead\">Personalized web app to collect the best daily Reddit submissions</p>\n      </Jumbotron>\n\n    );\n  };\n}\n\nexport default LandingHeader;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport '../css/login-form.css';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      handle: '',\n      password: '',\n      rememberMe: 0\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    if(event.target.id === 'handle') {this.setState({handle: event.target.value})}\n    if(event.target.id === 'password') {this.setState({password: event.target.value})}\n    if(event.target.id === 'rememberMe') {this.setState({rememberMe: event.target.checked})}\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch('http://localhost:5000/api/v1/login?handle=' +\n    this.state.handle + '&password=' + this.state.password +\n    '&rememberMe=' + this.state.rememberMe)\n      .then((response) => {\n        return response.json(response);\n      })\n      .then((response) => {\n        if(response.loggedIn) {\n          this.props.handleLogin(response);\n        }\n      });\n  }\n\n  handleClick(action) {\n    this.props.handleToggle(action);\n  }\n\n  render() {\n    return(\n      <Container className=\"login-form\">\n        <Row>\n          <Col>\n            <Form onSubmit={this.handleSubmit}>\n              <h3>Please Sign In</h3>\n              <Form.Group controlId=\"handle\">\n                <Form.Label>Username or Email</Form.Label>\n                <Form.Control value={this.state.handle} onChange={this.handleChange} type=\"email\" placeholder=\"Enter Username or Email\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control value={this.state.password} onChange={this.handleChange} type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n              <Form.Group controlId=\"rememberMe\">\n                <Form.Check onChange={this.handleChange} type=\"checkbox\" label=\"Remember Me\" />\n              </Form.Group>\n              <Button variant=\"dark\" type=\"submit\" block>\n                Login\n              </Button>\n            </Form>\n            <p onClick={() => {this.handleClick('about')}}>New Here? Learn More &amp; Sign Up!</p>\n            <p onClick={() => {this.handleClick('forgotPassword')}}>Forgot Password?</p>\n          </ Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport '../css/about.css';\n\nclass About extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(action) {\n    if(action === 'loginForm') {\n      this.props.handleToggle(action);\n    } else {\n      this.props.handleToggle(action);\n    }\n  }\n\n  render() {\n    return(\n      <Container className=\"about\">\n        <h2>Who has time to be on Reddit all day?</h2>\n        <p>\n        Many Reddit posts get submitted throughout the day, and unless you can constantly check your reddit feed some content may be missed and buried by other submissions.</p>\n\n        <p>\n        Reddit Aggregator helps mitigate this problem by allowing you to create an account and submit a list of subreddits you enjoy. Reddit Aggregator will check the subreddits hourly and compile a list of entries throughout the day that match the subreddits you provide. These entries are bundled together into a nice readable format called a report. Users can have several reports for different purposes (each having their own set of subreddits).\n        </p>\n\n        <p className=\"lead\">\n        Sound cool? Go ahead and sign up, it just takes a minute.\n        </p>\n        <Container style={{textAlign: 'center'}} className=\"about-button-conatiner\">\n          <Button size=\"sm\" variant=\"dark\" className=\"about-button\" onClick={() => {this.handleClick('signUpForm')}}>Sign Up</Button>\n          <Button size=\"sm\" variant=\"dark\" className=\"about-button\" onClick={() => {this.handleClick('loginForm')}}>Back to Sign In</Button>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default About;\n","import React from 'react'\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport '../css/signup-form.css';\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.createNewUser = this.createNewUser.bind(this);\n    this.handleAlert = this.handleAlert.bind(this);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      passwordCheck: '',\n      firstName: '',\n      lastName: '',\n      showWarning: false,\n      warning: ''\n    }\n  }\n\n  handleClick(action) {\n    if(action === 'loginForm') {\n      this.props.handleToggle(action);\n    } else {\n      this.props.handleToggle(action);\n    }\n  }\n\n  handleChange(e) {\n    if(e.target.id === 'username') {this.setState({username: e.target.value})}\n    if(e.target.id === 'email') {this.setState({email: e.target.value})}\n    if(e.target.id === 'password') {this.setState({password: e.target.value})}\n    if(e.target.id === 'passwordCheck') {this.setState({passwordCheck: e.target.value})}\n    if(e.target.id === 'firstName') {this.setState({firstName: e.target.value})}\n    if(e.target.id === 'lastName') {this.setState({lastName: e.target.value})}\n  }\n\n  handleAlert() {\n    if(this.state.showWarning) {\n      window.scrollTo(0, 0);\n      return <Alert\n        onClose={() => {this.setState({showWarning: false, alertShown: false})}}\n        dismissible\n        variant=\"danger\">\n          {this.state.warning}\n      </Alert>;\n    }\n  }\n\n  createNewUser(event) {\n    event.preventDefault();\n    if(this.state.password === this.state.passwordCheck) {\n      //create new user\n      fetch('http://localhost:5000/api/v1/createUser', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'omit',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrer: 'no-referrer',\n        body: JSON.stringify({\n          username: this.state.username,\n          email: this.state.email,\n          password: this.state.password,\n          firstName: this.state.firstName,\n          lastName: this.state.lastName\n        })\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((response) => {\n          if(response.userCreated) {\n\n          } else {\n            //show warning\n            if(response.reason === 'Error: username or email already exists') {\n              this.setState({showWarning: true, warning: 'Username and/or Email Already In Use'});\n            }\n          }\n        });\n    } else {\n      //send warning\n      this.setState({showWarning: true, warning: 'Passwords Do Not Match'});\n    }\n  }\n\n  render() {\n    return(\n      <Container className=\"signup-form\">\n        {this.handleAlert()}\n        <Row>\n          <Col>\n            <Form className=\"signupForm\" onSubmit={this.createNewUser}>\n\n              <h3>Sign Up</h3>\n              <Form.Group controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control value={this.state.username} onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter a Username\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control value={this.state.email} onChange={this.handleChange} required=\"required\" type=\"email\" placeholder=\"Enter your Email\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control value={this.state.password} onChange={this.handleChange} required=\"required\" type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"passwordCheck\">\n                <Form.Label>Retype Password</Form.Label>\n                <Form.Control value={this.state.passwordCheck} onChange={this.handleChange} required=\"required\" type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"firstName\">\n                <Form.Label>First Name</Form.Label>\n                <Form.Control value={this.state.firstName} onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter Your First Name\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"lastName\">\n                <Form.Label>Last Name</Form.Label>\n                <Form.Control  value={this.state.lastName} onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter Your Last Name\" />\n              </Form.Group>\n\n              <Button variant=\"dark\" type=\"submit\" block>\n                Create Account\n              </Button>\n\n            </Form>\n          </ Col>\n        </Row>\n\n        <Container style={{textAlign: 'center', marginBottom: '2rem'}} className=\"singup-button-conatiner\">\n          <Button\n            size=\"sm\"\n            variant=\"dark\"\n            className=\"signup-button\"\n            onClick={() => {this.handleClick('loginForm')}}>\n            Back to Sign In\n          </Button>\n\n          <Button\n            size=\"sm\"\n            variant=\"dark\"\n            className=\"signup-button\" onClick={() => {this.handleClick('about')}}>Back to About</Button>\n        </Container>\n\n      </Container>\n    );\n  }\n}\n\nexport default SignupForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../css/forgot-password-form.css';\n\nclass ForgotPasswordForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: ''\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleButtonText = this.handleButtonText.bind(this);\n    this.warning = this.warning.bind(this);\n  }\n\n  handleClick(action) {\n    this.props.handleToggle(action);\n  }\n\n  handleButtonText() {\n    if(!this.props.spinner) {\n      return 'Send Temporary Password';\n    } else {\n      return <Spinner size=\"sm\" animation=\"grow\" variant=\"light\" />\n    }\n  }\n\n  warning() {\n    if(this.props.showWarning) {\n      return <Alert\n      onClose={() => {this.props.closeWarning()}}\n      dismissible\n      variant=\"danger\">\n      That Email Is Not Registered\n      </Alert>\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.requestNewPassword(this.state.email);\n  }\n\n  handleChange(e) {\n    if(e.target.id === 'email') {this.setState({email: e.target.value})}\n  }\n\n  render() {\n    return(\n      <Container className=\"forgot-password-form\">\n        <Row>\n          <Col>\n            <Form onSubmit={this.handleSubmit}>\n              {this.warning()}\n              <h3>Forgot Password</h3>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Enter Your Email</Form.Label>\n                <Form.Control value={this.state.email} onChange={this.handleChange} type=\"email\" placeholder=\"Enter Email\" />\n              </Form.Group>\n\n              <Button className=\"forgot-password-button\" variant=\"dark\" type=\"submit\" block>\n                {this.handleButtonText()}\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n        <Container style={{textAlign: 'center'}} className=\"forgot-password-button-conatiner\">\n          <Button size=\"sm\" variant=\"dark\" className=\"about-button\" onClick={() => {this.handleClick('loginForm')}}>Back to Sign In</Button>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default ForgotPasswordForm;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport '../css/new-password-sent.css';\n\nclass NewPasswordSent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.handleToggle('loginForm');\n  }\n\n  render() {\n    return(\n      <Container className=\"new-password-sent-container\">\n        <Row>\n          <Col>\n            <p className=\"lead\">A temporary password has been sent to your email.</p>\n            <Button onClick={this.handleClick} variant=\"dark\">Return to Sign In</Button>\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default NewPasswordSent;\n","import React from 'react';\nimport ForgotPasswordForm from './ForgotPasswordForm';\nimport NewPasswordSent from './NewPasswordSent';\n\nclass ForgotPassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showForm: true,\n      showSpinner: false,\n      showWarning: false\n    };\n    this.requestNewPassword = this.requestNewPassword.bind(this);\n    this.handleDisplay = this.handleDisplay.bind(this);\n    this.closeWarning = this.closeWarning.bind(this);\n  }\n\n  handleDisplay() {\n    if(this.state.showForm) {\n      return <ForgotPasswordForm\n        handleToggle={this.props.handleToggle}\n        requestNewPassword={this.requestNewPassword}\n        spinner={this.state.showSpinner}\n        showWarning={this.state.showWarning}\n        closeWarning={this.closeWarning}\n      />;\n    } else {\n      //show message\n      return <NewPasswordSent handleToggle={this.props.handleToggle}/>;\n    }\n  }\n\n  closeWarning() {\n    this.setState({showWarning: false});\n  }\n\n  requestNewPassword(email) {\n    this.setState({showSpinner: true});\n    fetch('http://localhost:5000/api/v1/forgotPassword', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'omit',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify({\n        email: email\n      })\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((response) => {\n        if(response.result) {\n          this.setState({showForm: false, showSpinner: false});\n        } else {\n          console.log(response);\n          this.setState({showTrue: false, showSpinner: false, showWarning: true});\n        }\n      });\n  }\n\n  render() {\n    return(\n      <div>\n        {this.handleDisplay()}\n      </div>\n    );\n  }\n};\n\nexport default ForgotPassword;\n","import React from 'react';\nimport LandingHeader from './LandingHeader';\nimport LoginForm from './LoginForm';\nimport About from './About';\nimport SignupForm from './SignupForm';\nimport ForgotPassword from './ForgotPassword';\n\nclass LandingPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'loginForm'\n    };\n\n    this.handleDisplay = this.handleDisplay.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle(action) {\n    window.scrollTo(0, 0);\n    if(action === 'loginForm') {\n      this.setState({show: 'loginForm'});\n    } else if(action === 'about') {\n      this.setState({show: 'about'});\n    } else if(action === 'signUpForm') {\n      this.setState({show: 'signUpForm'});\n    } else {\n      this.setState({show: 'forgotPassword'});\n    }\n  }\n\n  handleDisplay() {\n    if(this.state.show === 'loginForm') {\n      return <LoginForm handleLogin={this.props.handleLogin} handleToggle={this.handleToggle}/>;\n    } else if(this.state.show === 'about') {\n      return <About handleToggle={this.handleToggle}/>;\n    } else if(this.state.show === 'signUpForm') {\n      return <SignupForm handleToggle={this.handleToggle}/>;\n    } else {\n      return <ForgotPassword handleToggle={this.handleToggle}/>;\n    }\n  }\n\n  render() {\n    return(\n      <div>\n        <LandingHeader handleToggle={this.handleToggle}/>\n        {this.handleDisplay()}\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\n\nclass ReportCard extends React.Component {\n  render() {\n    return(\n      <Card style={{ width: '18rem', margin: '0 auto', marginBottom: '3rem'}}>\n        <Card.Header variant=\"dark\" as=\"h5\"></Card.Header>\n        <Card.Body>\n          <Card.Title>{this.props.report.name}</Card.Title>\n          <Card.Text>\n            {this.props.report.description}\n          </Card.Text>\n          <ButtonGroup>\n            <Button variant=\"secondary\">View Report</Button>\n            <Button variant=\"secondary\">Edit Report</Button>\n          </ButtonGroup>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default ReportCard;\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ReportCard from './ReportCard';\nimport Container from 'react-bootstrap/Container';\n\nclass ReportList extends React.Component {\n  render() {\n    //convert the reports into an array of arrays (3 reports max each)\n    var reportGroupArray = [];\n    while (this.props.reportData.length > 0) {\n      reportGroupArray.push(this.props.reportData.splice(0, 3));\n    }\n\n    return(\n      <Container style={{margin: '0 auto'}} >\n        {\n          reportGroupArray.map((reportGroup, groupIndex) => {\n            return(\n              <Row style={{margin: '0 auto', textAlign:'left'}} key={groupIndex}>\n                {\n                  reportGroup.map((report, index) => {\n                    return(\n                      <Col key={index} style={{textAlign: 'left'}}>\n                        <ReportCard report={report} key={index + 1}/>\n                      </Col>\n                    )\n                  })\n                }\n              </Row>\n            )\n          })\n        }\n      </Container>\n    );\n  }\n}\n\nexport default ReportList;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport ReportList from './ReportList';\n\nclass Dashboard extends React.Component {\n  render() {\n    return(\n      <div>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\">Reddit Aggregator</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#home\">Reports</Nav.Link>\n            <Nav.Link href=\"#features\">Account Settings</Nav.Link>\n          </Nav>\n        </Navbar>\n        <Jumbotron style={{backgroundColor: '#FFF', textAlign: 'center', padding: '92px 0px 92px 0px'}}>\n          <h1 style={{fontWeight: '300'}}>Reports</h1>\n          <p className=\"lead\">Welcome, {this.props.userData.firstname}! Below are your reports.</p>\n          <Button style={{marginRight: '1rem'}}>Create New Report</Button>\n          <Button style={{marginLeft: '1rem'}}variant=\"dark\">Refresh Report Data</Button>\n        </Jumbotron>\n        <ReportList reportData={this.props.userData.reports} />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport LandingPage from './components/LandingPage';\nimport Dashboard from './components/Dashboard';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userData: null,\n      loggedIn: false,\n      serverCheck: false,\n    };\n\n    this.handleDisplay = this.handleDisplay.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleDisplay() {\n    if(!this.state.serverCheck) {\n      fetch('http://localhost:5000/api/v1/checkLoginStatus')\n        .then((response) => {\n          return response.json();\n        })\n        .then((result) => {       \n          if(result.loggedIn) {\n            this.setState({loggedIn: true, serverCheck: true, userData: result.userData});\n          } else {\n            this.setState({loggedIn: false, serverCheck: true});\n          }\n        });\n    } else {\n      if(this.state.loggedIn) {\n        return <Dashboard loggedIn={this.state.loggedIn} userData={this.state.userData} />;\n      } else {\n        return <LandingPage handleLogin={this.handleLogin} />;\n      }\n    }\n  }\n\n  handleLogin(user) {\n    this.setState({userData: user.userData, loggedIn: user.loggedIn});\n  }\n\n  render() {\n    return(\n      <div className=\"app\">\n        {this.handleDisplay()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}