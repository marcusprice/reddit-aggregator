{"version":3,"sources":["components/LandingHeader.jsx","components/LoginForm.jsx","components/About.jsx","components/SignupForm.jsx","components/ForgotPasswordForm.jsx","components/NewPasswordSent.jsx","components/ForgotPassword.jsx","components/LandingPage.jsx","components/ReportCard.jsx","components/ReportList.jsx","components/CreateReport.jsx","components/SubredditList.jsx","components/Submissions.jsx","components/ViewReport.jsx","components/EditReport.jsx","components/AccountSettings.jsx","components/Dashboard.jsx","App.js","serviceWorker.js","index.js"],"names":["LandingHeader","props","handleClick","bind","this","handleToggle","Jumbotron","style","cursor","onClick","className","React","Component","LoginForm","state","handle","password","rememberMe","showAlert","alert","showLoader","handleChange","handleSubmit","handleAlert","event","target","id","setState","value","checked","preventDefault","fetch","then","response","json","loggedIn","handleLogin","reason","action","Alert","dismissible","onClose","variant","width","display","justifyContent","type","color","height","Button","block","Container","Row","Col","Form","onSubmit","Group","controlId","Label","Control","onChange","placeholder","Check","label","handleLoader","About","textAlign","size","SignupForm","createNewUser","username","email","passwordCheck","firstName","lastName","showWarning","warning","e","window","scrollTo","alertShown","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","userCreated","required","marginBottom","ForgotPasswordForm","handleButtonText","spinner","Spinner","animation","closeWarning","requestNewPassword","NewPasswordSent","ForgotPassword","showForm","showSpinner","handleDisplay","result","showTrue","LandingPage","show","ReportCard","handleTitleClick","changeView","reportIndex","showDeleteReportWarning","Card","Header","Body","Title","report","name","Text","description","ButtonGroup","ReportList","showModal","deleteReportName","deleteReportID","plurals","createReport","updateReportData","deleteReport","reports","toArray","reportid","userInfo","userid","res","updateReports","reportData","handlePlural","backgroundColor","padding","fontWeight","firstname","Modal","onHide","closeButton","Footer","margin","map","index","key","delimiters","CreateReport","reportName","reportDescription","subreddits","suggestions","handleDelete","handleAddition","handleDrag","forEach","push","text","subredditname","notifications","length","userID","reportCreated","i","filter","subreddit","currPos","newPos","newSubreddits","slice","splice","marginRight","as","rows","ReactTags","classNames","tags","tagInput","tagInputField","selected","tag","remove","allowDeleteFromEmptyInput","autofocus","SubredditList","updateSubredditIndex","Submissions","rel","href","subredditName","submissions","submission","border","borderRadius","url","title","handlename","marginTop","marginLeft","comments","comment","commenttext","ViewReport","subredditIndex","handleSpinner","EditReport","editReport","reportID","reportEdited","AccountSettings","handleViewChange","updateUserInfo","changePassword","lastname","userData","userEdited","updateUserData","passwordChanged","Dashboard","handleView","logout","view","loggedOut","handleLogout","Navbar","bg","Brand","DropdownButton","alignRight","Dropdown","Item","App","serverChecked","initialLoad","List","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kdAyBeA,E,YArBb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,2EAOjBC,KAAKH,MAAMI,aAAa,e,+BAGhB,IAAD,OACP,OACE,kBAACC,EAAA,EAAD,KACE,wBAAIC,MAAO,CAACC,OAAQ,WAAWC,QAAS,WAAO,EAAKP,eAAgBQ,UAAU,aAA9E,qBACA,uBAAGA,UAAU,QAAb,0E,GAfoBC,IAAMC,W,yEC0HnBC,E,YAlHb,WAAYZ,GAAQ,IAAD,8BACjB,4CAAMA,KAEDa,MAAQ,CACXC,OAAQ,GACRC,SAAU,GACVC,WAAY,EACZC,WAAW,EACXC,MAAO,GACPC,YAAY,GAGd,EAAKC,aAAe,EAAKA,aAAalB,KAAlB,gBACpB,EAAKD,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKmB,aAAe,EAAKA,aAAanB,KAAlB,gBACpB,EAAKoB,YAAc,EAAKA,YAAYpB,KAAjB,gBAfF,E,0EAkBNqB,GACY,WAApBA,EAAMC,OAAOC,IAAkBtB,KAAKuB,SAAS,CAACZ,OAAQS,EAAMC,OAAOG,QAC/C,aAApBJ,EAAMC,OAAOC,IAAoBtB,KAAKuB,SAAS,CAACX,SAAUQ,EAAMC,OAAOG,QACnD,eAApBJ,EAAMC,OAAOC,IAAsBtB,KAAKuB,SAAS,CAACV,WAAYO,EAAMC,OAAOI,Y,mCAGnEL,GAAQ,IAAD,OAClBpB,KAAKuB,SAAS,CAACP,YAAY,IAC3BI,EAAMM,iBACNC,MAAM,iBACN3B,KAAKU,MAAMC,OAAS,aAAeX,KAAKU,MAAME,SAC9C,eAAiBZ,KAAKU,MAAMG,YACzBe,MAAK,SAACC,GACL,OAAOA,EAASC,KAAKD,MAEtBD,MAAK,SAACC,GAIH,IAAId,EAHHc,EAASE,SACV,EAAKlC,MAAMmC,YAAYH,IAIrBd,EADqB,0BAApBc,EAASI,OACF,qBAEA,8BAEV,EAAKV,SAAS,CACZT,WAAW,EACXE,YAAY,EACZD,MAAOA,U,kCAMLmB,GACVlC,KAAKH,MAAMI,aAAaiC,K,oCAGX,IAAD,OACZ,GAAGlC,KAAKU,MAAMI,UACZ,OAAO,kBAACqB,EAAA,EAAD,CAAOC,aAAW,EAACC,QAAS,WAAO,EAAKd,SAAS,CAACT,WAAW,KAAUwB,QAAQ,UAAUtC,KAAKU,MAAMK,S,qCAK7G,OAAGf,KAAKU,MAAMM,WAEV,yBAAKb,MAAO,CAACoC,MAAO,OAAQC,QAAS,OAAQC,eAAgB,WAC3D,kBAAC,IAAD,CACEC,KAAK,OACLC,MAAM,UACNC,OAAQ,IACRL,MAAO,OAMX,kBAACM,EAAA,EAAD,CAAQP,QAAQ,OAAOI,KAAK,SAASI,OAAK,GAA1C,W,+BAOI,IAAD,OACP,OACE,kBAACC,EAAA,EAAD,CAAWzC,UAAU,cACnB,kBAAC0C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,SAAUnD,KAAKkB,cAClBlB,KAAKmB,cACN,8CACA,kBAAC+B,EAAA,EAAKE,MAAN,CAAYC,UAAU,UACpB,kBAACH,EAAA,EAAKI,MAAN,0BACA,kBAACJ,EAAA,EAAKK,QAAN,CAAc/B,MAAOxB,KAAKU,MAAMC,OAAQ6C,SAAUxD,KAAKiB,aAAcyB,KAAK,OAAOe,YAAY,6BAG/F,kBAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,YACpB,kBAACH,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAc/B,MAAOxB,KAAKU,MAAME,SAAU4C,SAAUxD,KAAKiB,aAAcyB,KAAK,WAAWe,YAAY,cAErG,kBAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,cACpB,kBAACH,EAAA,EAAKQ,MAAN,CAAYF,SAAUxD,KAAKiB,aAAcyB,KAAK,WAAWiB,MAAM,iBAEhE3D,KAAK4D,gBAER,uBAAGvD,QAAS,WAAO,EAAKP,YAAY,WAApC,mCACA,uBAAGO,QAAS,WAAO,EAAKP,YAAY,oBAApC,2B,GA3GYS,IAAMC,WCiCfqD,G,mBArCb,WAAYhE,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,yEAMPmC,GAERlC,KAAKH,MAAMI,aAAaiC,K,+BAMlB,IAAD,OACP,OACE,kBAACa,EAAA,EAAD,CAAWzC,UAAU,SACnB,qEACA,mMAGA,wdAIA,uBAAGA,UAAU,QAAb,6DAGA,kBAACyC,EAAA,EAAD,CAAW5C,MAAO,CAAC2D,UAAW,UAAWxD,UAAU,0BACjD,kBAACuC,EAAA,EAAD,CAAQkB,KAAK,KAAKzB,QAAQ,OAAOhC,UAAU,eAAeD,QAAS,WAAO,EAAKP,YAAY,gBAA3F,WACA,kBAAC+C,EAAA,EAAD,CAAQkB,KAAK,KAAKzB,QAAQ,OAAOhC,UAAU,eAAeD,QAAS,WAAO,EAAKP,YAAY,eAA3F,yB,GA/BUS,IAAMC,YCgKXwD,G,mBA3Jb,WAAYnE,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKkB,aAAe,EAAKA,aAAalB,KAAlB,gBACpB,EAAKkE,cAAgB,EAAKA,cAAclE,KAAnB,gBACrB,EAAKoB,YAAc,EAAKA,YAAYpB,KAAjB,gBACnB,EAAKW,MAAQ,CACXwD,SAAU,GACVC,MAAO,GACPvD,SAAU,GACVwD,cAAe,GACfC,UAAW,GACXC,SAAU,GACVC,aAAa,EACbC,QAAS,IAdM,E,yEAkBPtC,GAERlC,KAAKH,MAAMI,aAAaiC,K,mCAMfuC,GACQ,aAAhBA,EAAEpD,OAAOC,IAAoBtB,KAAKuB,SAAS,CAAC2C,SAAUO,EAAEpD,OAAOG,QAC/C,UAAhBiD,EAAEpD,OAAOC,IAAiBtB,KAAKuB,SAAS,CAAC4C,MAAOM,EAAEpD,OAAOG,QACzC,aAAhBiD,EAAEpD,OAAOC,IAAoBtB,KAAKuB,SAAS,CAACX,SAAU6D,EAAEpD,OAAOG,QAC/C,kBAAhBiD,EAAEpD,OAAOC,IAAyBtB,KAAKuB,SAAS,CAAC6C,cAAeK,EAAEpD,OAAOG,QACzD,cAAhBiD,EAAEpD,OAAOC,IAAqBtB,KAAKuB,SAAS,CAAC8C,UAAWI,EAAEpD,OAAOG,QACjD,aAAhBiD,EAAEpD,OAAOC,IAAoBtB,KAAKuB,SAAS,CAAC+C,SAAUG,EAAEpD,OAAOG,U,oCAGrD,IAAD,OACZ,GAAGxB,KAAKU,MAAM6D,YAEZ,OADAG,OAAOC,SAAS,EAAG,GACZ,kBAACxC,EAAA,EAAD,CACLE,QAAS,WAAO,EAAKd,SAAS,CAACgD,aAAa,EAAOK,YAAY,KAC/DxC,aAAW,EACXE,QAAQ,UACLtC,KAAKU,MAAM8D,W,oCAKNpD,GAAQ,IAAD,OACnBA,EAAMM,iBACH1B,KAAKU,MAAME,WAAaZ,KAAKU,MAAM0D,cAEpCzC,MAAM,cAAe,CACnBkD,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,OACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU,CACnBpB,SAAUlE,KAAKU,MAAMwD,SACrBC,MAAOnE,KAAKU,MAAMyD,MAClBvD,SAAUZ,KAAKU,MAAME,SACrByD,UAAWrE,KAAKU,MAAM2D,UACtBC,SAAUtE,KAAKU,MAAM4D,aAGtB1C,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACC,GACFA,EAAS0D,aAIa,4CAApB1D,EAASI,QACV,EAAKV,SAAS,CAACgD,aAAa,EAAMC,QAAS,4CAMnDxE,KAAKuB,SAAS,CAACgD,aAAa,EAAMC,QAAS,6B,+BAIrC,IAAD,OACP,OACE,kBAACzB,EAAA,EAAD,CAAWzC,UAAU,eAClBN,KAAKmB,cACN,kBAAC6B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAM5C,UAAU,aAAa6C,SAAUnD,KAAKiE,eAE1C,uCACA,kBAACf,EAAA,EAAKE,MAAN,CAAYC,UAAU,YACpB,kBAACH,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAc/B,MAAOxB,KAAKU,MAAMwD,SAAUV,SAAUxD,KAAKiB,aAAcuE,SAAS,WAAW9C,KAAK,OAAOe,YAAY,sBAGrH,kBAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,SACpB,kBAACH,EAAA,EAAKI,MAAN,cACA,kBAACJ,EAAA,EAAKK,QAAN,CAAc/B,MAAOxB,KAAKU,MAAMyD,MAAOX,SAAUxD,KAAKiB,aAAcuE,SAAS,WAAW9C,KAAK,QAAQe,YAAY,sBAGnH,kBAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,YACpB,kBAACH,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAc/B,MAAOxB,KAAKU,MAAME,SAAU4C,SAAUxD,KAAKiB,aAAcuE,SAAS,WAAW9C,KAAK,WAAWe,YAAY,cAGzH,kBAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,iBACpB,kBAACH,EAAA,EAAKI,MAAN,wBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAc/B,MAAOxB,KAAKU,MAAM0D,cAAeZ,SAAUxD,KAAKiB,aAAcuE,SAAS,WAAW9C,KAAK,WAAWe,YAAY,cAG9H,kBAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,aACpB,kBAACH,EAAA,EAAKI,MAAN,mBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAc/B,MAAOxB,KAAKU,MAAM2D,UAAWb,SAAUxD,KAAKiB,aAAcuE,SAAS,WAAW9C,KAAK,OAAOe,YAAY,2BAGtH,kBAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,YACpB,kBAACH,EAAA,EAAKI,MAAN,kBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAe/B,MAAOxB,KAAKU,MAAM4D,SAAUd,SAAUxD,KAAKiB,aAAcuE,SAAS,WAAW9C,KAAK,OAAOe,YAAY,0BAGtH,kBAACZ,EAAA,EAAD,CAAQP,QAAQ,OAAOI,KAAK,SAASI,OAAK,GAA1C,qBAQN,kBAACC,EAAA,EAAD,CAAW5C,MAAO,CAAC2D,UAAW,SAAU2B,aAAc,QAASnF,UAAU,2BACvE,kBAACuC,EAAA,EAAD,CACEkB,KAAK,KACLzB,QAAQ,OACRhC,UAAU,gBACVD,QAAS,WAAO,EAAKP,YAAY,eAJnC,mBAQA,kBAAC+C,EAAA,EAAD,CACEkB,KAAK,KACLzB,QAAQ,OACRhC,UAAU,gBAAgBD,QAAS,WAAO,EAAKP,YAAY,WAH7D,uB,GAjJeS,IAAMC,Y,QC0EhBkF,G,mBAxEb,WAAY7F,GAAQ,IAAD,8BACjB,4CAAMA,KAEDa,MAAQ,CACXyD,MAAO,IAET,EAAKrE,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKkB,aAAe,EAAKA,aAAalB,KAAlB,gBACpB,EAAKmB,aAAe,EAAKA,aAAanB,KAAlB,gBACpB,EAAK4F,iBAAmB,EAAKA,iBAAiB5F,KAAtB,gBACxB,EAAKyE,QAAU,EAAKA,QAAQzE,KAAb,gBAVE,E,yEAaPmC,GACVlC,KAAKH,MAAMI,aAAaiC,K,yCAIxB,OAAIlC,KAAKH,MAAM+F,QAGN,kBAACC,EAAA,EAAD,CAAS9B,KAAK,KAAK+B,UAAU,OAAOxD,QAAQ,UAF5C,4B,gCAMA,IAAD,OACR,GAAGtC,KAAKH,MAAM0E,YACZ,OAAO,kBAACpC,EAAA,EAAD,CACPE,QAAS,WAAO,EAAKxC,MAAMkG,gBAC3B3D,aAAW,EACXE,QAAQ,UAHD,kC,mCASElB,GACXA,EAAMM,iBACN1B,KAAKH,MAAMmG,mBAAmBhG,KAAKU,MAAMyD,S,mCAG9BM,GACQ,UAAhBA,EAAEpD,OAAOC,IAAiBtB,KAAKuB,SAAS,CAAC4C,MAAOM,EAAEpD,OAAOG,U,+BAGpD,IAAD,OACP,OACE,kBAACuB,EAAA,EAAD,CAAWzC,UAAU,wBACnB,kBAAC0C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,SAAUnD,KAAKkB,cAClBlB,KAAKwE,UACN,+CACA,kBAACtB,EAAA,EAAKE,MAAN,CAAYC,UAAU,SACpB,kBAACH,EAAA,EAAKI,MAAN,yBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAc/B,MAAOxB,KAAKU,MAAMyD,MAAOX,SAAUxD,KAAKiB,aAAcyB,KAAK,QAAQe,YAAY,iBAG/F,kBAACZ,EAAA,EAAD,CAAQvC,UAAU,yBAAyBgC,QAAQ,OAAOI,KAAK,SAASI,OAAK,GAC1E9C,KAAK2F,uBAKd,kBAAC5C,EAAA,EAAD,CAAW5C,MAAO,CAAC2D,UAAW,UAAWxD,UAAU,oCACjD,kBAACuC,EAAA,EAAD,CAAQkB,KAAK,KAAKzB,QAAQ,OAAOhC,UAAU,eAAeD,QAAS,WAAO,EAAKP,YAAY,eAA3F,yB,GAlEuBS,IAAMC,YCsBxByF,G,mBAxBb,WAAYpG,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,YAAc,EAAKA,YAAYC,KAAjB,gBAFF,E,2EAMjBC,KAAKH,MAAMI,aAAa,e,+BAIxB,OACE,kBAAC8C,EAAA,EAAD,CAAWzC,UAAU,+BACnB,kBAAC0C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,uBAAG3C,UAAU,QAAb,qDACA,kBAACuC,EAAA,EAAD,CAAQxC,QAASL,KAAKF,YAAawC,QAAQ,QAA3C,4B,GAhBkB/B,IAAMC,YCkErB0F,E,YApEb,WAAYrG,GAAQ,IAAD,8BACjB,4CAAMA,KACDa,MAAQ,CACXyF,UAAU,EACVC,aAAa,EACb7B,aAAa,GAEf,EAAKyB,mBAAqB,EAAKA,mBAAmBjG,KAAxB,gBAC1B,EAAKsG,cAAgB,EAAKA,cAActG,KAAnB,gBACrB,EAAKgG,aAAe,EAAKA,aAAahG,KAAlB,gBATH,E,6EAajB,OAAGC,KAAKU,MAAMyF,SACL,kBAAC,EAAD,CACLlG,aAAcD,KAAKH,MAAMI,aACzB+F,mBAAoBhG,KAAKgG,mBACzBJ,QAAS5F,KAAKU,MAAM0F,YACpB7B,YAAavE,KAAKU,MAAM6D,YACxBwB,aAAc/F,KAAK+F,eAId,kBAAC,EAAD,CAAiB9F,aAAcD,KAAKH,MAAMI,iB,qCAKnDD,KAAKuB,SAAS,CAACgD,aAAa,M,yCAGXJ,GAAQ,IAAD,OACxBnE,KAAKuB,SAAS,CAAC6E,aAAa,IAC5BzE,MAAM,kBAAmB,CACvBkD,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,OACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU,CACnBnB,MAAOA,MAGRvC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACC,GACFA,EAASyE,OACV,EAAK/E,SAAS,CAAC4E,UAAU,EAAOC,aAAa,IAE7C,EAAK7E,SAAS,CAACgF,UAAU,EAAOH,aAAa,EAAO7B,aAAa,S,+BAMvE,OACE,6BACGvE,KAAKqG,qB,GA/De9F,IAAMC,WCiDpBgG,E,YA7Cb,WAAY3G,GAAQ,IAAD,8BACjB,4CAAMA,KACDa,MAAQ,CACX+F,KAAM,aAGR,EAAKJ,cAAgB,EAAKA,cAActG,KAAnB,gBACrB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBAPH,E,0EAUNmC,GACXwC,OAAOC,SAAS,EAAG,GACL,cAAXzC,EACDlC,KAAKuB,SAAS,CAACkF,KAAM,cACF,UAAXvE,EACRlC,KAAKuB,SAAS,CAACkF,KAAM,UACF,eAAXvE,EACRlC,KAAKuB,SAAS,CAACkF,KAAM,eAErBzG,KAAKuB,SAAS,CAACkF,KAAM,qB,sCAKvB,MAAuB,cAApBzG,KAAKU,MAAM+F,KACL,kBAAC,EAAD,CAAWzE,YAAahC,KAAKH,MAAMmC,YAAa/B,aAAcD,KAAKC,eAC9C,UAApBD,KAAKU,MAAM+F,KACZ,kBAAC,EAAD,CAAOxG,aAAcD,KAAKC,eACL,eAApBD,KAAKU,MAAM+F,KACZ,kBAAC,EAAD,CAAYxG,aAAcD,KAAKC,eAE/B,kBAAC,EAAD,CAAgBA,aAAcD,KAAKC,iB,+BAK5C,OACE,6BACE,kBAAC,EAAD,CAAeA,aAAcD,KAAKC,eACjCD,KAAKqG,qB,GAxCY9F,IAAMC,W,0CCoCjBkG,E,YArCb,WAAY7G,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAK4G,iBAAmB,EAAKA,iBAAiB5G,KAAtB,gBAHP,E,yEAMPqB,GACVA,EAAMM,iBACiB,eAApBN,EAAMC,OAAOC,IAAqBtB,KAAKH,MAAM+G,WAAW,aAAc5G,KAAKH,MAAMgH,aAC7D,eAApBzF,EAAMC,OAAOC,IAAqBtB,KAAKH,MAAM+G,WAAW,aAAc5G,KAAKH,MAAMgH,aAC7D,iBAApBzF,EAAMC,OAAOC,IAAuBtB,KAAKH,MAAMiH,wBAAwB9G,KAAKH,MAAMgH,e,yCAIrF7G,KAAKH,MAAM+G,WAAW,aAAc5G,KAAKH,MAAMgH,e,+BAI/C,OACE,kBAACE,EAAA,EAAD,CAAM5G,MAAO,CAAEoC,MAAO,QAASkD,aAAc,SAC3C,kBAACsB,EAAA,EAAKC,OAAN,CAAa1E,QAAQ,QAArB,aACA,kBAACyE,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,CAAY7G,QAASL,KAAK2G,iBAAkBxG,MAAO,CAACC,OAAQ,YAAaJ,KAAKH,MAAMsH,OAAOC,MAC3F,kBAACL,EAAA,EAAKM,KAAN,KACGrH,KAAKH,MAAMsH,OAAOG,aAErB,kBAACC,EAAA,EAAD,KACE,kBAAC1E,EAAA,EAAD,CAAQvB,GAAG,aAAayC,KAAK,KAAKzB,QAAQ,oBAAoBjC,QAASL,KAAKF,aAA5E,QACA,kBAAC+C,EAAA,EAAD,CAAQvB,GAAG,aAAayC,KAAK,KAAKzB,QAAQ,oBAAoBjC,QAASL,KAAKF,aAA5E,QACA,kBAAC+C,EAAA,EAAD,CAAQvB,GAAG,eAAeyC,KAAK,KAAKzB,QAAQ,oBAAoBjC,QAASL,KAAKF,aAA9E,iB,GA9BaS,IAAMC,W,QC4IhBgH,G,mBAxIb,WAAY3H,GAAQ,IAAD,8BACjB,4CAAMA,KACDa,MAAQ,CACXI,WAAW,EACX2G,WAAW,EACXC,iBAAkB,GAClBC,eAAgB,EAChBC,QAAS,IAGX,EAAKC,aAAe,EAAKA,aAAa9H,KAAlB,gBACpB,EAAK+G,wBAA0B,EAAKA,wBAAwB/G,KAA7B,gBAC/B,EAAK+H,iBAAmB,EAAKA,iBAAiB/H,KAAtB,gBACxB,EAAKgI,aAAe,EAAKA,aAAahI,KAAlB,gBACpB,EAAKoB,YAAc,EAAKA,YAAYpB,KAAjB,gBAdF,E,2EAiBJ,IAAD,OACZ,GAAGC,KAAKU,MAAMI,UACZ,OAAO,kBAACqB,EAAA,EAAD,CAAOE,QAAS,WAAO,EAAKd,SAAS,CAACT,WAAW,KAAUsB,aAAW,EAACE,QAAQ,WAA/E,yB,mCAIElB,GACXA,EAAMM,iBACN1B,KAAKH,MAAM+G,WAAW,kB,8CAGAC,GACtB,IAAImB,EAAUhI,KAAKH,MAAMmI,QAAQC,UACjCjI,KAAKuB,SAAS,CACZkG,WAAW,EACXC,iBAAkBM,EAAQnB,GAAaO,KACvCO,eAAgBK,EAAQnB,GAAaqB,a,uCAIxB9G,GAAQ,IAAD,OACtBA,EAAMM,iBACNC,MAAM,4BAA8B3B,KAAKH,MAAMsI,SAASC,QACrDxG,MAAK,SAAAyG,GAAG,OAAIA,EAAIvG,UAChBF,MAAK,SAACoG,GACL,EAAKnI,MAAMyI,cAAcN,GACzB,EAAKzG,SAAS,CAACT,WAAW,S,mCAInBM,GAAQ,IAAD,OAClBA,EAAMM,iBACNC,MAAM,wBAAwB3B,KAAKH,MAAMsI,SAASC,OAAO,aAAapI,KAAKU,MAAMiH,gBAC9E/F,MAAK,SAAAyG,GAAG,OAAIA,EAAIvG,UAChBF,MAAK,SAACC,GACL,EAAKhC,MAAMyI,cAAczG,EAAS0G,YAClC,EAAKhH,SAAS,CAACkG,WAAW,S,qCAK9B,IAAI/G,EACJ,OAAOV,KAAKH,MAAMmI,QAAQjE,MACxB,KAAK,EACHrD,EAAQ,mDACR,MACF,KAAK,EACHA,EAAQ,+DACR,MACF,QACEA,EAAQ,0BAITV,KAAKU,MAAMkH,UAAYlH,GACxBV,KAAKuB,SAAS,CACZqG,QAASlH,M,0CAMbV,KAAKwI,iB,2CAILxI,KAAKwI,iB,+BAGG,IAAD,OACHR,EAAUhI,KAAKH,MAAMmI,QAAQC,UAEjC,OACE,6BACE,kBAAC/H,EAAA,EAAD,CAAWC,MAAO,CAACsI,gBAAiB,OAAQ3E,UAAW,SAAU4E,QAAS,sBACxE,wBAAIvI,MAAO,CAACwI,WAAY,QAAxB,WACA,uBAAGrI,UAAU,QAAb,WAA6BN,KAAKH,MAAMsI,SAASS,UAAjD,KAA8D5I,KAAKU,MAAMkH,SACzE,yBAAKtH,UAAU,oBACb,kBAACuC,EAAA,EAAD,CAAQvC,UAAU,gBAAgBD,QAASL,KAAK6H,cAAhD,qBACA,kBAAChF,EAAA,EAAD,CAAQvC,UAAU,gBAAgBD,QAASL,KAAK8H,iBAAkBxF,QAAQ,QAA1E,yBAIJ,kBAACuG,EAAA,EAAD,CAAOpC,KAAMzG,KAAKU,MAAM+G,UAAWqB,OAAQ,kBAAM,EAAKvH,SAAS,CAACkG,WAAW,MACzE,kBAACoB,EAAA,EAAM7B,OAAP,CAAc+B,aAAW,GACvB,kBAACF,EAAA,EAAM3B,MAAP,uBAEF,kBAAC2B,EAAA,EAAM5B,KAAP,6CAAkDjH,KAAKU,MAAMgH,iBAA7D,YACA,kBAACmB,EAAA,EAAMG,OAAP,KACE,kBAACnG,EAAA,EAAD,CAAQP,QAAQ,YAAYjC,QAAS,WAAO,EAAKkB,SAAS,CAACkG,WAAW,MAAtE,UAGA,kBAAC5E,EAAA,EAAD,CAAQxC,QAASL,KAAK+H,aAAczF,QAAQ,UAA5C,YAMJ,yBAAKnC,MAAO,CAACoC,MAAO,MAAO0G,OAAQ,WAChCjJ,KAAKmB,cACN,yBAAKb,UAAU,QAEb0H,EAAQkB,KAAI,SAAC/B,EAAQgC,GACnB,OAAO,kBAAC,EAAD,CACLrC,wBAAyB,EAAKA,wBAC9BF,WAAY,EAAK/G,MAAM+G,WACvBO,OAAQA,EACRN,YAAasC,EACbC,IAAKjC,EAAOe,qB,GA9HH3H,IAAMC,Y,wBCQzB6I,EAAa,CAJV,IACA,IA6KMC,E,YAvKb,WAAYzJ,GAAQ,IAAD,8BACjB,4CAAMA,KAEDa,MAAQ,CACX6I,WAAY,GACZC,kBAAmB,GACnBC,WAAY,GACZC,YAAa,GACb5I,WAAW,GAGb,EAAKhB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAK4J,aAAe,EAAKA,aAAa5J,KAAlB,gBACpB,EAAK6J,eAAiB,EAAKA,eAAe7J,KAApB,gBACtB,EAAK8J,WAAa,EAAKA,WAAW9J,KAAhB,gBAClB,EAAK8H,aAAe,EAAKA,aAAa9H,KAAlB,gBACpB,EAAKkB,aAAe,EAAKA,aAAalB,KAAlB,gBACpB,EAAKoB,YAAc,EAAKA,YAAYpB,KAAjB,gBAjBF,E,iFAoBE,IAAD,OAClB4B,MAAM,kBACHC,MAAK,SAAAyG,GAAG,OAAIA,EAAIvG,UAChBF,MAAK,SAAC0E,GACL,IAAImD,EAAa,GACjBnD,EAAOwD,SAAQ,SAACtI,GACdiI,EAAWM,KAAK,CAACC,KAAMxI,EAAMyI,cAAe3I,GAAIE,EAAMyI,mBAExD,EAAK1I,SAAS,CAACmI,YAAaD,S,mCAIrBrI,GACY,eAApBA,EAAMC,OAAOC,IAAqBtB,KAAKuB,SAAS,CAACgI,WAAYnI,EAAMC,OAAOG,QACtD,sBAApBJ,EAAMC,OAAOC,IAA4BtB,KAAKuB,SAAS,CAACiI,kBAAmBpI,EAAMC,OAAOG,QACpE,kBAApBJ,EAAMC,OAAOC,IAAwBtB,KAAKuB,SAAS,CAAC2I,cAAe9I,EAAMC,OAAOI,Y,mCAGxEL,GAAQ,IAAD,OAElB,GADAA,EAAMM,iBACH1B,KAAKU,MAAM+I,WAAWU,OAAS,EAChCnK,KAAKuB,SAAS,CACZT,WAAW,QAER,CACL,IAAI2I,EAAazJ,KAAKU,MAAM+I,WAAWP,KAAI,SAAA1H,GAAK,OAAIA,EAAMwI,QAC1DrI,MAAM,gBAAiB,CACrBkD,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,OACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU,CACnB8E,OAAQpK,KAAKH,MAAMuK,OACnBhD,KAAMpH,KAAKU,MAAM6I,WACjBjC,YAAatH,KAAKU,MAAM8I,kBACxBC,WAAYA,EACZS,eAAe,MAGhBtI,MAAK,SAAAyG,GAAG,OAAIA,EAAIvG,UAChBF,MAAK,SAACC,GACFA,EAASwI,gBACV,EAAKxK,MAAM+G,WAAW,WACtB,EAAK/G,MAAMyI,cAAczG,EAAS0G,mB,oCAS1CvI,KAAKH,MAAM+G,WAAW,a,mCAGX0D,GAAI,IACPb,EAAezJ,KAAKU,MAApB+I,WACRzJ,KAAKuB,SAAS,CACbkI,WAAYA,EAAWc,QAAO,SAACC,EAAWrB,GAAZ,OAAsBA,IAAUmB,S,qCAIlDE,GACXxK,KAAKuB,UAAS,SAAAb,GAAK,MAAK,CAAE+I,WAAW,GAAD,mBAAM/I,EAAM+I,YAAZ,CAAwBe,U,iCAGrDA,EAAWC,EAASC,GAC3B,IACMC,EADU,YAAO3K,KAAKU,MAAM+I,YACDmB,QAEjCD,EAAcE,OAAOJ,EAAS,GAC9BE,EAAcE,OAAOH,EAAQ,EAAGF,GAGhCxK,KAAKuB,SAAS,CAAEkI,WAAYkB,M,oCAGjB,IAAD,OACZ,GAAG3K,KAAKU,MAAMI,UACZ,OAAO,kBAACqB,EAAA,EAAD,CAAOG,QAAQ,SAASD,QAAS,WAAO,EAAKd,SAAS,CAACT,WAAW,KAAWsB,aAAW,GAAxF,sD,+BAID,IAAD,EAC6BpC,KAAKU,MAAjC+I,EADD,EACCA,WAAYC,EADb,EACaA,YACpB,OACE,kBAAC3G,EAAA,EAAD,KACE,kBAAC7C,EAAA,EAAD,CAAWC,MAAO,CAACsI,gBAAiB,OAAQ3E,UAAW,SAAU4E,QAAS,sBACxE,wBAAIvI,MAAO,CAACwI,WAAY,QAAxB,iBACA,uBAAGrI,UAAU,QAAb,8CACA,kBAACuC,EAAA,EAAD,CAAQxC,QAASL,KAAKF,YAAaK,MAAO,CAAC2K,YAAa,SAAxD,oBAEF,kBAAC9H,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAM5C,UAAU,mBAAmB6C,SAAUnD,KAAK6H,cAC/C7H,KAAKmB,cACN,kBAAC+B,EAAA,EAAKE,MAAN,CAAYC,UAAU,cACpB,kBAACH,EAAA,EAAKI,MAAN,oBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAc/B,MAAOxB,KAAKU,MAAM6I,WAAY/F,SAAUxD,KAAKiB,aAAcuE,SAAS,WAAW9C,KAAK,OAAOe,YAAY,yBAGvH,kBAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,qBACpB,kBAACH,EAAA,EAAKI,MAAN,2BACA,kBAACJ,EAAA,EAAKK,QAAN,CAAc/B,MAAOxB,KAAKU,MAAM8I,kBAAmBhG,SAAUxD,KAAKiB,aAAc8J,GAAG,WAAWC,KAAK,IAAIvH,YAAY,+CAGrH,kBAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,cACpB,kBAACH,EAAA,EAAKI,MAAN,mBACA,kBAAC2H,EAAA,YAAD,CACEC,WAAY,CACVC,KAAM,GACNC,SAAU,gBACVC,cAAe,eACfC,SAAU,gBACVC,IAAK,+BACLC,OAAQ,qBAEVC,2BAA2B,EAC3BN,KAAM1B,EACNC,YAAaA,EACbC,aAAc3J,KAAK2J,aACnBC,eAAgB5J,KAAK4J,eACrBC,WAAY7J,KAAK6J,WACjBR,WAAYA,EACZ5F,YAAa,sBACbiI,WAAW,KAKf,kBAAC7I,EAAA,EAAD,CAAQP,QAAQ,OAAOI,KAAK,SAASI,OAAK,GAA1C,yB,GA5JavC,IAAMC,WCAlBmL,G,wLAbH,IAAD,OACP,OACE,yBAAKrL,UAAU,iBAEXN,KAAKH,MAAM4J,WAAWP,KAAI,SAAC1H,EAAO2H,GAChC,OAAQ,kBAACtG,EAAA,EAAD,CAAQxC,QAAS,SAACe,GAAWA,EAAMM,iBAAkB,EAAK7B,MAAM+L,qBAAqBzC,IAAS7I,UAAU,mBAAmBgC,QAAQ,YAAY8G,IAAKD,GAAQ3H,W,GANpJjB,IAAMC,YC+BnBqL,G,wLA9BX,OACE,yBAAKvL,UAAU,eACb,4BAAI,uBAAGwL,IAAI,sBAAsBzK,OAAO,SAAS0K,KAAM,4BAA8B/L,KAAKH,MAAMmM,eAAgBhM,KAAKH,MAAMmM,gBAEzHhM,KAAKH,MAAMoM,YAAY/C,KAAI,SAACgD,EAAY/C,GACtC,OACE,yBAAKC,IAAKD,EAAOhJ,MAAO,CAACuI,QAAS,OAAQjD,aAAc,OAAQ0G,OAAQ,sBAAuBC,aAAc,QAC3G,uBAAG9L,UAAU,QACX,uBAAGH,MAAO,CAACwC,MAAO,QAASmJ,IAAI,sBAAsBzK,OAAO,SAAS0K,KAAMG,EAAWG,KAAMH,EAAWI,QAEzG,yCAAeJ,EAAWK,YAC1B,yBAAKpM,MAAO,CAACqM,UAAW,SAAUC,WAAY,SAC5C,uBAAGnM,UAAU,QAAb,gBAEE4L,EAAWQ,SAASxD,KAAI,SAACyD,EAASxD,GAChC,OACE,uBAAGC,IAAKD,GAAQwD,EAAQJ,WAAxB,KAAsCI,EAAQC,0B,GAlB5CrM,IAAMC,YC4GjBqM,G,mBArGb,WAAYhN,GAAQ,IAAD,8BACjB,4CAAMA,KAEDa,MAAQ,CACXoM,eAAgB,EAChB1G,aAAa,EACbqB,WAAW,GAGb,EAAK3H,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAK6L,qBAAuB,EAAKA,qBAAqB7L,KAA1B,gBAC5B,EAAK+H,iBAAmB,EAAKA,iBAAiB/H,KAAtB,gBACxB,EAAKgN,cAAgB,EAAKA,cAAchN,KAAnB,gBACrB,EAAK+G,wBAA0B,EAAKA,wBAAwB/G,KAA7B,gBAC/B,EAAKgI,aAAe,EAAKA,aAAahI,KAAlB,gBAdH,E,yEAiBPqB,GACVA,EAAMM,iBACN1B,KAAKH,MAAM+G,WAAW,a,sCAItB,OAAG5G,KAAKU,MAAM0F,YACL,kBAACP,EAAA,EAAD,CAAS9B,KAAK,KAAK+B,UAAU,OAAOxD,QAAQ,UAE5C,wB,gDAKTtC,KAAKuB,SAAS,CACZkG,WAAW,M,mCAIFrG,GAAQ,IAAD,OAClBA,EAAMM,iBACNC,MAAM,wBAAwB3B,KAAKH,MAAMsI,SAASC,OAAO,aAAapI,KAAKH,MAAMsH,OAAOe,UACrFtG,MAAK,SAAAyG,GAAG,OAAIA,EAAIvG,UAChBF,MAAK,SAACC,GACL,EAAKhC,MAAMyI,cAAczG,EAAS0G,YAClC,EAAK1I,MAAM+G,WAAW,gB,uCAIXxF,GAAQ,IAAD,OACtBA,EAAMM,iBACNC,MAAM,4BAA8B3B,KAAKH,MAAMsI,SAASC,QACrDxG,MAAK,SAACyG,GAEL,OADA,EAAK9G,SAAS,CAAC6E,aAAa,IACrBiC,EAAIvG,UAEZF,MAAK,SAACoG,GACL,EAAKzG,SAAS,CAAC6E,aAAa,IAC5B,EAAKvG,MAAMyI,cAAcN,GACzB,EAAKnI,MAAM+G,WAAW,aAAc,EAAK/G,MAAMgH,kB,2CAIhCsC,GACnBnJ,KAAKuB,SAAS,CAACuL,eAAgB3D,M,+BAGvB,IAAD,OACP,OACE,6BACE,kBAACN,EAAA,EAAD,CAAOpC,KAAMzG,KAAKU,MAAM+G,UAAWqB,OAAQ,kBAAM,EAAKvH,SAAS,CAACkG,WAAW,MACzE,kBAACoB,EAAA,EAAM7B,OAAP,CAAc+B,aAAW,GACvB,kBAACF,EAAA,EAAM3B,MAAP,uBAEF,kBAAC2B,EAAA,EAAM5B,KAAP,6CAAkDjH,KAAKH,MAAMsH,OAAOC,KAApE,YACA,kBAACyB,EAAA,EAAMG,OAAP,KACE,kBAACnG,EAAA,EAAD,CAAQP,QAAQ,YAAYjC,QAAS,WAAO,EAAKkB,SAAS,CAACkG,WAAW,MAAtE,UAGA,kBAAC5E,EAAA,EAAD,CAAQxC,QAASL,KAAK+H,aAAczF,QAAQ,UAA5C,YAMJ,kBAACpC,EAAA,EAAD,CAAWC,MAAO,CAACsI,gBAAiB,OAAQ3E,UAAW,SAAU4E,QAAS,sBACxE,wBAAIvI,MAAO,CAACwI,WAAY,QAAS3I,KAAKH,MAAMsH,OAAOC,MACnD,uBAAG9G,UAAU,QAAQN,KAAKH,MAAMsH,OAAOG,aACvC,yBAAKhH,UAAU,oBACb,kBAACuC,EAAA,EAAD,CAAQvC,UAAU,gBAAgBD,QAASL,KAAKF,aAAhD,mBACA,kBAAC+C,EAAA,EAAD,CAAQvC,UAAU,gBAAgBD,QAASL,KAAK8H,iBAAkBxF,QAAQ,QAAQtC,KAAK+M,iBACvF,kBAAClK,EAAA,EAAD,CAAQvC,UAAU,gBAAgBD,QAAS,SAACe,GAAWA,EAAMM,iBAAkB,EAAKoF,4BAApF,mBAGJ,kBAAC,EAAD,CAAe8E,qBAAsB5L,KAAK4L,qBAAsBnC,WAAYzJ,KAAKH,MAAMsH,OAAOsC,aAC9F,kBAAC,EAAD,CACEuC,cAAehM,KAAKH,MAAMsH,OAAOsC,WAAWzJ,KAAKU,MAAMoM,gBACvDb,YAAajM,KAAKH,MAAMsH,OAAO8E,YAAYjM,KAAKU,MAAMoM,uB,GA/FvCvM,IAAMC,YCMzB6I,EAAa,CAJV,IACA,IA+JM2D,E,YAzJb,WAAYnN,GAAQ,IAAD,8BACjB,4CAAMA,KAEDa,MAAQ,CACX6I,WAAY,GACZC,kBAAmB,GACnBC,WAAY,GACZC,YAAa,IAGf,EAAK5J,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKkB,aAAe,EAAKA,aAAalB,KAAlB,gBACpB,EAAK4J,aAAe,EAAKA,aAAa5J,KAAlB,gBACpB,EAAK6J,eAAiB,EAAKA,eAAe7J,KAApB,gBACtB,EAAK8J,WAAa,EAAKA,WAAW9J,KAAhB,gBAClB,EAAKkN,WAAa,EAAKA,WAAWlN,KAAhB,gBAfD,E,yEAkBPqB,GACVA,EAAMM,iBACN1B,KAAKH,MAAM+G,WAAW,a,mCAGXxF,GACY,eAApBA,EAAMC,OAAOC,IAAqBtB,KAAKuB,SAAS,CAACgI,WAAYnI,EAAMC,OAAOG,QACtD,sBAApBJ,EAAMC,OAAOC,IAA4BtB,KAAKuB,SAAS,CAACiI,kBAAmBpI,EAAMC,OAAOG,QACpE,kBAApBJ,EAAMC,OAAOC,IAAwBtB,KAAKuB,SAAS,CAAC2I,cAAe9I,EAAMC,OAAOI,Y,mCAGxE6I,GAAI,IACPb,EAAezJ,KAAKU,MAApB+I,WACRzJ,KAAKuB,SAAS,CACbkI,WAAYA,EAAWc,QAAO,SAACC,EAAWrB,GAAZ,OAAsBA,IAAUmB,S,qCAIlDE,GACXxK,KAAKuB,UAAS,SAAAb,GAAK,MAAK,CAAE+I,WAAW,GAAD,mBAAM/I,EAAM+I,YAAZ,CAAwBe,U,iCAGrDA,EAAWC,EAASC,GAC3B,IACMC,EADU,YAAO3K,KAAKU,MAAM+I,YACDmB,QAEjCD,EAAcE,OAAOJ,EAAS,GAC9BE,EAAcE,OAAOH,EAAQ,EAAGF,GAGhCxK,KAAKuB,SAAS,CAAEkI,WAAYkB,M,0CAI9B,IAAIlB,EAAazJ,KAAKH,MAAMsH,OAAOsC,WAAWP,KAAI,SAAA1H,GAAW,MAAO,CAACF,GAAIE,EAAOwI,KAAMxI,MACtFxB,KAAKuB,SAAS,CACZgI,WAAYvJ,KAAKH,MAAMsH,OAAOC,KAC9BoC,kBAAmBxJ,KAAKH,MAAMsH,OAAOG,YACrCmC,WAAYA,M,iCAILrI,GAAQ,IAAD,OAChBA,EAAMM,iBAEN,IAAI+H,EAAazJ,KAAKU,MAAM+I,WAAWP,KAAI,SAAA1H,GAAK,OAAIA,EAAMwI,QAE1DrI,MAAM,cAAe,CACnBkD,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,OACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU,CACnB8E,OAAQpK,KAAKH,MAAMsI,SAASC,OAC5B8E,SAAUlN,KAAKH,MAAMsH,OAAOe,SAC5Bd,KAAMpH,KAAKU,MAAM6I,WACjBjC,YAAatH,KAAKU,MAAM8I,kBACxBC,WAAYA,EACZS,eAAe,MAGhBtI,MAAK,SAAAyG,GAAG,OAAIA,EAAIvG,UAChBF,MAAK,SAACC,GACFA,EAASsL,eACV,EAAKtN,MAAM+G,WAAW,WACtB,EAAK/G,MAAMyI,cAAczG,EAAS0G,kB,+BAOhC,IAAD,EAC6BvI,KAAKU,MAAjC+I,EADD,EACCA,WAAYC,EADb,EACaA,YACpB,OACE,kBAAC3G,EAAA,EAAD,KACE,kBAAC7C,EAAA,EAAD,CAAWC,MAAO,CAACsI,gBAAiB,OAAQ3E,UAAW,SAAU4E,QAAS,sBACxE,wBAAIvI,MAAO,CAACwI,WAAY,QAAxB,QAAsC3I,KAAKH,MAAMsH,OAAOC,KAAxD,WACA,uBAAG9G,UAAU,QAAb,0CACA,kBAACuC,EAAA,EAAD,CAAQxC,QAASL,KAAKF,YAAaK,MAAO,CAAC2K,YAAa,SAAxD,oBAEF,kBAAC9H,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAM5C,UAAU,iBAAiB6C,SAAUnD,KAAKiN,YAC9C,kBAAC/J,EAAA,EAAKE,MAAN,CAAYC,UAAU,cACpB,kBAACH,EAAA,EAAKI,MAAN,oBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAc/B,MAAOxB,KAAKU,MAAM6I,WAAY/F,SAAUxD,KAAKiB,aAAcuE,SAAS,WAAW9C,KAAK,OAAOe,YAAY,yBAGvH,kBAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,qBACpB,kBAACH,EAAA,EAAKI,MAAN,2BACA,kBAACJ,EAAA,EAAKK,QAAN,CAAc/B,MAAOxB,KAAKU,MAAM8I,kBAAmBhG,SAAUxD,KAAKiB,aAAc8J,GAAG,WAAWC,KAAK,IAAIvH,YAAY,+CAGrH,kBAACP,EAAA,EAAKE,MAAN,CAAYC,UAAU,cACpB,kBAACH,EAAA,EAAKI,MAAN,mBACA,kBAAC2H,EAAA,YAAD,CACEC,WAAY,CACVC,KAAM,GACNC,SAAU,gBACVC,cAAe,eACfC,SAAU,gBACVC,IAAK,+BACLC,OAAQ,qBAEVC,2BAA2B,EAC3BN,KAAM1B,EACNC,YAAaA,EACbC,aAAc3J,KAAK2J,aACnBC,eAAgB5J,KAAK4J,eACrBC,WAAY7J,KAAK6J,WACjBR,WAAYA,EACZ5F,YAAa,sBACbiI,WAAW,KAKf,kBAAC7I,EAAA,EAAD,CAAQP,QAAQ,OAAOI,KAAK,SAASI,OAAK,GAA1C,uB,GA9IWvC,IAAMC,WCsLhB4M,G,mBA/Lb,WAAYvN,GAAQ,IAAD,8BACjB,4CAAMA,KACDa,MAAQ,CACXwD,SAAU,GACVC,MAAO,GACPE,UAAW,GACXC,SAAU,GACV1D,SAAU,GACVwD,cAAe,GACftD,WAAW,EACXC,MAAO,IAGT,EAAKE,aAAe,EAAKA,aAAalB,KAAlB,gBACpB,EAAKsN,iBAAmB,EAAKA,iBAAiBtN,KAAtB,gBACxB,EAAKoB,YAAc,EAAKA,YAAYpB,KAAjB,gBACnB,EAAKuN,eAAiB,EAAKA,eAAevN,KAApB,gBACtB,EAAKwN,eAAiB,EAAKA,eAAexN,KAApB,gBAjBL,E,iFAqBjBC,KAAKuB,SAAS,CACZ2C,SAAUlE,KAAKH,MAAMsI,SAASjE,SAC9BC,MAAOnE,KAAKH,MAAMsI,SAAShE,MAC3BE,UAAWrE,KAAKH,MAAMsI,SAASS,UAC/BtE,SAAUtE,KAAKH,MAAMsI,SAASqF,a,mCAIrB/I,GACQ,aAAhBA,EAAEpD,OAAOC,IAAmBtB,KAAKuB,SAAS,CAAC2C,SAAUO,EAAEpD,OAAOG,QAC9C,UAAhBiD,EAAEpD,OAAOC,IAAgBtB,KAAKuB,SAAS,CAAC4C,MAAOM,EAAEpD,OAAOG,QACxC,cAAhBiD,EAAEpD,OAAOC,IAAoBtB,KAAKuB,SAAS,CAAC8C,UAAWI,EAAEpD,OAAOG,QAChD,aAAhBiD,EAAEpD,OAAOC,IAAmBtB,KAAKuB,SAAS,CAAC+C,SAAUG,EAAEpD,OAAOG,QAC9C,aAAhBiD,EAAEpD,OAAOC,IAAmBtB,KAAKuB,SAAS,CAACX,SAAU6D,EAAEpD,OAAOG,QAC9C,kBAAhBiD,EAAEpD,OAAOC,IAAwBtB,KAAKuB,SAAS,CAAC6C,cAAeK,EAAEpD,OAAOG,U,uCAG5DiD,GACfA,EAAE/C,iBACF1B,KAAKH,MAAM+G,WAAW,a,oCAGT,IAAD,OACZ,GAAG5G,KAAKU,MAAMI,UACZ,MAAwB,2BAArBd,KAAKU,MAAMK,OAA2D,yCAArBf,KAAKU,MAAMK,MACtD,kBAACoB,EAAA,EAAD,CAAOE,QAAS,WAAO,EAAKd,SAAS,CAACT,WAAW,KAAUsB,aAAW,EAACE,QAAQ,UAAUtC,KAAKU,MAAMK,OAEpG,kBAACoB,EAAA,EAAD,CAAOE,QAAS,WAAO,EAAKd,SAAS,CAACT,WAAW,KAAUsB,aAAW,EAACE,QAAQ,WAAWtC,KAAKU,MAAMK,S,qCAKnGK,GAAQ,IAAD,OACpBA,EAAMM,iBACNC,MAAM,YAAa,CACjBkD,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,OACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU,CACnB8E,OAAQpK,KAAKH,MAAMsI,SAASC,OAC5BqF,SAAU,CACRvJ,SAAUlE,KAAKU,MAAMwD,SACrBC,MAAOnE,KAAKU,MAAMyD,MAClBE,UAAWrE,KAAKU,MAAM2D,UACtBC,SAAUtE,KAAKU,MAAM4D,cAIxB1C,MAAM,SAAAyG,GAAG,OAAIA,EAAIvG,UACjBF,MAAK,SAACC,GACFA,EAAS6L,WACV,EAAKnM,SAAS,CACZT,WAAW,EACXC,MAAO,uCACN,WACD2D,OAAOC,SAAS,EAAG,GACnB,EAAK9E,MAAM8N,eAAe9L,EAAS4L,aAGrC,EAAKlM,SAAS,CACZT,WAAW,EACXC,MAAO,yCACN,WACD2D,OAAOC,SAAS,EAAG,W,qCAMdvD,GAAQ,IAAD,OACpBA,EAAMM,iBACH1B,KAAKU,MAAME,WAAaZ,KAAKU,MAAM0D,cACpCzC,MAAM,kBAAmB,CACvBkD,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,OACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,SAAU,cACVC,KAAMC,KAAKC,UAAU,CACnB8E,OAAQpK,KAAKH,MAAMsI,SAASC,OAC5BxH,SAAUZ,KAAKU,MAAME,aAGtBgB,MAAM,SAAAyG,GAAG,OAAIA,EAAIvG,UACjBF,MAAK,SAACC,IAC2B,IAA7BA,EAAS+L,iBACV,EAAKrM,SAAS,CACZT,WAAW,EACXC,MAAO,mCACN,WACD2D,OAAOC,SAAS,EAAG,SAK3B3E,KAAKuB,SAAS,CACZT,WAAW,EACXC,MAAO,2BACN,WACD2D,OAAOC,SAAS,EAAG,Q,+BAMvB,OACE,6BACE,kBAACzE,EAAA,EAAD,CAAWC,MAAO,CAACsI,gBAAiB,OAAQ3E,UAAW,SAAU4E,QAAS,sBACxE,wBAAIvI,MAAO,CAACwI,WAAY,QAAxB,oBACA,uBAAGrI,UAAU,QAAb,qDACA,kBAACuC,EAAA,EAAD,CAAQxC,QAASL,KAAKqN,iBAAkBlN,MAAO,CAAC2K,YAAa,SAA7D,oBAEF,kBAAC5H,EAAA,EAAD,CAAMC,SAAUnD,KAAKsN,eAAgBhN,UAAU,eAC5CN,KAAKmB,cACN,yCACA,kBAAC+B,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAc/B,MAAOxB,KAAKU,MAAMwD,SAAU5C,GAAG,WAAWkC,SAAUxD,KAAKiB,aAAcuE,SAAS,WAAW9C,KAAK,OAAOe,YAAY,sBAGnI,kBAACP,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKI,MAAN,cACA,kBAACJ,EAAA,EAAKK,QAAN,CAAc/B,MAAOxB,KAAKU,MAAMyD,MAAO7C,GAAG,QAAQkC,SAAUxD,KAAKiB,aAAcuE,SAAS,WAAW9C,KAAK,QAAQe,YAAY,sBAG9H,kBAACP,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKI,MAAN,mBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAc/B,MAAOxB,KAAKU,MAAM2D,UAAW/C,GAAG,YAAYkC,SAAUxD,KAAKiB,aAAcuE,SAAS,WAAW9C,KAAK,OAAOe,YAAY,2BAGrI,kBAACP,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKI,MAAN,kBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAc/B,MAAOxB,KAAKU,MAAM4D,SAAUhD,GAAG,WAAWkC,SAAUxD,KAAKiB,aAAcuE,SAAS,WAAW9C,KAAK,OAAOe,YAAY,0BAGnI,kBAACZ,EAAA,EAAD,CAAQP,QAAQ,OAAOI,KAAK,SAASI,OAAK,GAA1C,qBAIF,kBAACI,EAAA,EAAD,CAAM/C,MAAO,CAACqM,UAAW,QAAQlM,UAAU,4BAA4B6C,SAAUnD,KAAKuN,gBACpF,+CACA,kBAACrK,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKI,MAAN,qBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAc/B,MAAOxB,KAAKU,MAAME,SAAUU,GAAG,WAAWkC,SAAUxD,KAAKiB,aAAcuE,SAAS,WAAW9C,KAAK,WAAWe,YAAY,sBAGvI,kBAACP,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKI,MAAN,yBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAc/B,MAAOxB,KAAKU,MAAM0D,cAAe9C,GAAG,gBAAgBkC,SAAUxD,KAAKiB,aAAcuE,SAAS,WAAW9C,KAAK,WAAWe,YAAY,sBAGjJ,kBAACZ,EAAA,EAAD,CAAQP,QAAQ,OAAOI,KAAK,SAASI,OAAK,GAA1C,yB,GAvLoBvC,IAAMC,YC+FrBqN,E,YA3Fb,WAAYhO,GAAQ,IAAD,8BACjB,4CAAMA,KACDa,MAAQ,CACX+F,KAAM,UACNI,YAAa,GAGf,EAAKiH,WAAa,EAAKA,WAAW/N,KAAhB,gBAClB,EAAK6G,WAAa,EAAKA,WAAW7G,KAAhB,gBAClB,EAAKgO,OAAS,EAAKA,OAAOhO,KAAZ,gBATG,E,0EAcjB,GADA2E,OAAOC,SAAS,EAAG,GACI,YAApB3E,KAAKU,MAAM+F,KACZ,OAAO,kBAAC,EAAD,CACL6B,cAAetI,KAAKH,MAAMyI,cAC1B1B,WAAY5G,KAAK4G,WACjBuB,SAAUnI,KAAKH,MAAM4N,SACrBzF,QAAShI,KAAKH,MAAMmI,UAEjB,GAAuB,iBAApBhI,KAAKU,MAAM+F,KACnB,OAAO,kBAAC,EAAD,CACL6B,cAAetI,KAAKH,MAAMyI,cAC1B8B,OAAQpK,KAAKH,MAAM4N,SAASrF,OAC5BxB,WAAY5G,KAAK4G,aAEd,GAAuB,eAApB5G,KAAKU,MAAM+F,KAAuB,CAC1C,IAAIuB,EAAUhI,KAAKH,MAAMmI,QAAQC,UACjC,OAAO,kBAAC,EAAD,CACLpB,YAAa7G,KAAKU,MAAMmG,YACxBM,OAAQa,EAAQhI,KAAKU,MAAMmG,aAC3BD,WAAY5G,KAAK4G,WACjBuB,SAAUnI,KAAKH,MAAM4N,SACrBnF,cAAetI,KAAKH,MAAMyI,gBAEvB,GAAuB,eAApBtI,KAAKU,MAAM+F,KAAuB,CAC1C,IAAIuB,EAAUhI,KAAKH,MAAMmI,QAAQC,UACjC,OAAO,kBAAC,EAAD,CACLpB,YAAa7G,KAAKU,MAAMmG,YACxBM,OAAQa,EAAQhI,KAAKU,MAAMmG,aAC3BD,WAAY5G,KAAK4G,WACjBuB,SAAUnI,KAAKH,MAAM4N,SACrBnF,cAAetI,KAAKH,MAAMyI,gBAG5B,OAAO,kBAAC,EAAD,CACLH,SAAUnI,KAAKH,MAAM4N,SACrB7G,WAAY5G,KAAK4G,WACjB+G,eAAgB3N,KAAKH,MAAM8N,mB,iCAKtBK,GAA2B,IAArBnH,EAAoB,uDAAN,KAC7BnC,OAAOC,SAAS,EAAE,GACN,eAATqJ,GAAkC,eAATA,EAC1BhO,KAAKuB,SAAS,CAACkF,KAAMuH,EAAMnH,YAAaA,IAExC7G,KAAKuB,SAAS,CAACkF,KAAMuH,M,+BAIf,IAAD,OACPrM,MAAM,WACHC,MAAK,SAAAyG,GAAG,OAAIA,EAAIvG,UAChBF,MAAK,SAACC,GACFA,EAASoM,WACV,EAAKpO,MAAMqO,oB,+BAKT,IAAD,OACP,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQhO,MAAO,CAACqC,QAAS,OAAQC,eAAgB,iBAAkB2L,GAAG,OAAO9L,QAAQ,QACnF,kBAAC6L,EAAA,EAAOE,MAAR,CAAclO,MAAO,CAACC,OAAQ,WAAYC,QAAS,WAAO,EAAKuG,WAAW,aAA1E,qBACA,kBAAC0H,EAAA,EAAD,CAAgBhM,QAAQ,YAAYhB,GAAG,wBAAwBgL,MAAM,OAAOiC,YAAU,GACpF,kBAACC,EAAA,EAASC,KAAV,CAAepO,QAAS,WAAO,EAAKkB,SAAS,CAACkF,KAAM,cAApD,WACA,kBAAC+H,EAAA,EAASC,KAAV,CAAepO,QAAS,WAAO,EAAKkB,SAAS,CAACkF,KAAM,mBAApD,iBACA,kBAAC+H,EAAA,EAASC,KAAV,CAAepO,QAAS,WAAO,EAAKkB,SAAS,CAACkF,KAAM,sBAApD,oBACA,kBAAC+H,EAAA,EAASC,KAAV,CAAepO,QAAS,WAAO,EAAK0N,WAApC,YAGH/N,KAAK8N,kB,GAtFUvN,IAAMC,W,QC0FfkO,E,YA9Fb,WAAY7O,GAAQ,IAAD,8BACjB,4CAAMA,KAEDa,MAAQ,CACX+M,SAAU,KACV1L,UAAU,EACV4M,eAAe,EACfC,aAAa,EACb5G,QAAS,IAGX,EAAK3B,cAAgB,EAAKA,cAActG,KAAnB,gBACrB,EAAKiC,YAAc,EAAKA,YAAYjC,KAAjB,gBACnB,EAAKmO,aAAe,EAAKA,aAAanO,KAAlB,gBACpB,EAAKuI,cAAgB,EAAKA,cAAcvI,KAAnB,gBACrB,EAAK4N,eAAiB,EAAKA,eAAe5N,KAApB,gBAfL,E,iFAkBE,IAAD,OAElB4B,MAAM,oBAAqB,CACzBsD,QAAU,CACR,eAAgB,mBAChB,OAAU,sBAGXrD,MAAK,SAAAyG,GAAG,OAAIA,EAAIvG,UAChBF,MAAK,SAAC0E,GACL,IAAM0B,EAAU6G,YAAKvI,EAAOiC,YAC5B,EAAKhH,SAAS,CACZQ,SAAUuE,EAAOvE,SACjB0L,SAAUnH,EAAOmH,SACjBkB,eAAe,EACfC,aAAa,EACb5G,QAASA,S,oCAKHO,GACZ,IAAMP,EAAU6G,YAAKtG,GACrBvI,KAAKuB,SAAS,CACZyG,QAASA,M,qCAIEyF,GACbzN,KAAKuB,SAAS,CACZkM,SAAUA,M,sCAKZ,IAAIzN,KAAKU,MAAMkO,YACb,OAAG5O,KAAKU,MAAMqB,SACL,kBAAC,EAAD,CACLuG,cAAetI,KAAKsI,cACpBqF,eAAgB3N,KAAK2N,eACrB3F,QAAShI,KAAKU,MAAMsH,QACpByF,SAAUzN,KAAKU,MAAM+M,SACrBS,aAAclO,KAAKkO,eAGd,kBAAC,EAAD,CAAalM,YAAahC,KAAKgC,gB,kCAKhCH,GACV,IAAMmG,EAAU6G,YAAKhN,EAAS0G,YAC9BvI,KAAKuB,SAAS,CACZkM,SAAU5L,EAAS4L,SACnB1L,SAAUF,EAASE,SACnBiG,QAASA,M,qCAKXhI,KAAKuB,SAAS,CACZkM,SAAU,GACV1L,UAAU,EACViG,QAAS,O,+BAKX,OACE,yBAAK1H,UAAU,OACZN,KAAKqG,qB,GAzFI9F,IAAMC,WCOJsO,QACW,cAA7BpK,OAAOqK,SAASC,UAEe,UAA7BtK,OAAOqK,SAASC,UAEhBtK,OAAOqK,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5N,MAAK,SAAA6N,GACjCA,EAAaC,iB","file":"static/js/main.825d69f2.chunk.js","sourcesContent":["import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nclass LandingHeader extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.handleToggle('loginForm')\n  }\n\n  render() {\n    return(\n      <Jumbotron>\n        <h1 style={{cursor: 'pointer'}}onClick={() => {this.handleClick()}} className=\"display-4\">Reddit Aggregator</h1>\n        <p className=\"lead\">Personalized web app to collect the best daily Reddit submissions</p>\n      </Jumbotron>\n\n    );\n  };\n}\n\nexport default LandingHeader;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport '../css/login-form.css';\nimport Loader from 'react-loader-spinner'\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      handle: '',\n      password: '',\n      rememberMe: 0,\n      showAlert: false,\n      alert: '',\n      showLoader: false\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleAlert = this.handleAlert.bind(this);\n  }\n\n  handleChange(event) {\n    if(event.target.id === 'handle') {this.setState({handle: event.target.value})}\n    if(event.target.id === 'password') {this.setState({password: event.target.value})}\n    if(event.target.id === 'rememberMe') {this.setState({rememberMe: event.target.checked})}\n  }\n\n  handleSubmit(event) {\n    this.setState({showLoader: true})\n    event.preventDefault();\n    fetch('/login?handle=' +\n    this.state.handle + '&password=' + this.state.password +\n    '&rememberMe=' + this.state.rememberMe)\n      .then((response) => {\n        return response.json(response);\n      })\n      .then((response) => {\n        if(response.loggedIn) {\n          this.props.handleLogin(response);\n        } else {\n          let alert;\n          if(response.reason === 'password didn\\'t match') {\n            alert = 'Incorrect Password';\n          } else {\n            alert = 'Incorrect Username or Email';\n          }\n          this.setState({\n            showAlert: true,\n            showLoader: false,\n            alert: alert\n          });\n        }\n      });\n  }\n\n  handleClick(action) {\n    this.props.handleToggle(action);\n  }\n\n  handleAlert() {\n    if(this.state.showAlert) {\n      return <Alert dismissible onClose={() => {this.setState({showAlert: false})}} variant=\"danger\">{this.state.alert}</Alert>\n    }\n  }\n\n  handleLoader() {\n    if(this.state.showLoader) {\n      return(\n        <div style={{width: '100%', display: 'flex', justifyContent: 'center'}}>\n          <Loader\n            type=\"Puff\"\n            color=\"#343a40\"\n            height={100}\n            width={100}\n          />\n        </div>\n      )\n    } else {\n      return(\n        <Button variant=\"dark\" type=\"submit\" block>\n          Login\n        </Button>\n      )\n    }\n  }\n\n  render() {\n    return(\n      <Container className=\"login-form\">\n        <Row>\n          <Col>\n            <Form onSubmit={this.handleSubmit}>\n              {this.handleAlert()}\n              <h3>Please Sign In</h3>\n              <Form.Group controlId=\"handle\">\n                <Form.Label>Username or Email</Form.Label>\n                <Form.Control value={this.state.handle} onChange={this.handleChange} type=\"text\" placeholder=\"Enter Username or Email\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control value={this.state.password} onChange={this.handleChange} type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n              <Form.Group controlId=\"rememberMe\">\n                <Form.Check onChange={this.handleChange} type=\"checkbox\" label=\"Remember Me\" />\n              </Form.Group>\n              {this.handleLoader()}\n            </Form>\n            <p onClick={() => {this.handleClick('about')}}>New Here? Learn More &amp; Sign Up!</p>\n            <p onClick={() => {this.handleClick('forgotPassword')}}>Forgot Password?</p>\n          </ Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport '../css/about.css';\n\nclass About extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(action) {\n    if(action === 'loginForm') {\n      this.props.handleToggle(action);\n    } else {\n      this.props.handleToggle(action);\n    }\n  }\n\n  render() {\n    return(\n      <Container className=\"about\">\n        <h2>Who has time to be on Reddit all day?</h2>\n        <p>\n        Many Reddit posts get submitted throughout the day, and unless you can constantly check your reddit feed some content may be missed and buried by other submissions.</p>\n\n        <p>\n        Reddit Aggregator helps mitigate this problem by allowing you to create an account and submit a list of subreddits you enjoy. Reddit Aggregator will check the subreddits hourly and compile a list of entries throughout the day that match the subreddits you provide. These entries are bundled together into a nice readable format called a report. Users can have several reports for different purposes (each having their own set of subreddits).\n        </p>\n\n        <p className=\"lead\">\n        Sound cool? Go ahead and sign up, it just takes a minute.\n        </p>\n        <Container style={{textAlign: 'center'}} className=\"about-button-conatiner\">\n          <Button size=\"sm\" variant=\"dark\" className=\"about-button\" onClick={() => {this.handleClick('signUpForm')}}>Sign Up</Button>\n          <Button size=\"sm\" variant=\"dark\" className=\"about-button\" onClick={() => {this.handleClick('loginForm')}}>Back to Sign In</Button>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default About;\n","import React from 'react'\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport '../css/signup-form.css';\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.createNewUser = this.createNewUser.bind(this);\n    this.handleAlert = this.handleAlert.bind(this);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      passwordCheck: '',\n      firstName: '',\n      lastName: '',\n      showWarning: false,\n      warning: ''\n    }\n  }\n\n  handleClick(action) {\n    if(action === 'loginForm') {\n      this.props.handleToggle(action);\n    } else {\n      this.props.handleToggle(action);\n    }\n  }\n\n  handleChange(e) {\n    if(e.target.id === 'username') {this.setState({username: e.target.value})}\n    if(e.target.id === 'email') {this.setState({email: e.target.value})}\n    if(e.target.id === 'password') {this.setState({password: e.target.value})}\n    if(e.target.id === 'passwordCheck') {this.setState({passwordCheck: e.target.value})}\n    if(e.target.id === 'firstName') {this.setState({firstName: e.target.value})}\n    if(e.target.id === 'lastName') {this.setState({lastName: e.target.value})}\n  }\n\n  handleAlert() {\n    if(this.state.showWarning) {\n      window.scrollTo(0, 0);\n      return <Alert\n        onClose={() => {this.setState({showWarning: false, alertShown: false})}}\n        dismissible\n        variant=\"danger\">\n          {this.state.warning}\n      </Alert>;\n    }\n  }\n\n  createNewUser(event) {\n    event.preventDefault();\n    if(this.state.password === this.state.passwordCheck) {\n      //create new user\n      fetch('/createUser', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'omit',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrer: 'no-referrer',\n        body: JSON.stringify({\n          username: this.state.username,\n          email: this.state.email,\n          password: this.state.password,\n          firstName: this.state.firstName,\n          lastName: this.state.lastName\n        })\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((response) => {\n          if(response.userCreated) {\n\n          } else {\n            //show warning\n            if(response.reason === 'Error: username or email already exists') {\n              this.setState({showWarning: true, warning: 'Username and/or Email Already In Use'});\n            }\n          }\n        });\n    } else {\n      //send warning\n      this.setState({showWarning: true, warning: 'Passwords Do Not Match'});\n    }\n  }\n\n  render() {\n    return(\n      <Container className=\"signup-form\">\n        {this.handleAlert()}\n        <Row>\n          <Col>\n            <Form className=\"signupForm\" onSubmit={this.createNewUser}>\n\n              <h3>Sign Up</h3>\n              <Form.Group controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control value={this.state.username} onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter a Username\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control value={this.state.email} onChange={this.handleChange} required=\"required\" type=\"email\" placeholder=\"Enter your Email\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control value={this.state.password} onChange={this.handleChange} required=\"required\" type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"passwordCheck\">\n                <Form.Label>Retype Password</Form.Label>\n                <Form.Control value={this.state.passwordCheck} onChange={this.handleChange} required=\"required\" type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"firstName\">\n                <Form.Label>First Name</Form.Label>\n                <Form.Control value={this.state.firstName} onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter Your First Name\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"lastName\">\n                <Form.Label>Last Name</Form.Label>\n                <Form.Control  value={this.state.lastName} onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter Your Last Name\" />\n              </Form.Group>\n\n              <Button variant=\"dark\" type=\"submit\" block>\n                Create Account\n              </Button>\n\n            </Form>\n          </ Col>\n        </Row>\n\n        <Container style={{textAlign: 'center', marginBottom: '2rem'}} className=\"singup-button-conatiner\">\n          <Button\n            size=\"sm\"\n            variant=\"dark\"\n            className=\"signup-button\"\n            onClick={() => {this.handleClick('loginForm')}}>\n            Back to Sign In\n          </Button>\n\n          <Button\n            size=\"sm\"\n            variant=\"dark\"\n            className=\"signup-button\" onClick={() => {this.handleClick('about')}}>Back to About</Button>\n        </Container>\n\n      </Container>\n    );\n  }\n}\n\nexport default SignupForm;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../css/forgot-password-form.css';\n\nclass ForgotPasswordForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: ''\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleButtonText = this.handleButtonText.bind(this);\n    this.warning = this.warning.bind(this);\n  }\n\n  handleClick(action) {\n    this.props.handleToggle(action);\n  }\n\n  handleButtonText() {\n    if(!this.props.spinner) {\n      return 'Send Temporary Password';\n    } else {\n      return <Spinner size=\"sm\" animation=\"grow\" variant=\"light\" />\n    }\n  }\n\n  warning() {\n    if(this.props.showWarning) {\n      return <Alert\n      onClose={() => {this.props.closeWarning()}}\n      dismissible\n      variant=\"danger\">\n      That Email Is Not Registered\n      </Alert>\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.requestNewPassword(this.state.email);\n  }\n\n  handleChange(e) {\n    if(e.target.id === 'email') {this.setState({email: e.target.value})}\n  }\n\n  render() {\n    return(\n      <Container className=\"forgot-password-form\">\n        <Row>\n          <Col>\n            <Form onSubmit={this.handleSubmit}>\n              {this.warning()}\n              <h3>Forgot Password</h3>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Enter Your Email</Form.Label>\n                <Form.Control value={this.state.email} onChange={this.handleChange} type=\"email\" placeholder=\"Enter Email\" />\n              </Form.Group>\n\n              <Button className=\"forgot-password-button\" variant=\"dark\" type=\"submit\" block>\n                {this.handleButtonText()}\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n        <Container style={{textAlign: 'center'}} className=\"forgot-password-button-conatiner\">\n          <Button size=\"sm\" variant=\"dark\" className=\"about-button\" onClick={() => {this.handleClick('loginForm')}}>Back to Sign In</Button>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default ForgotPasswordForm;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport '../css/new-password-sent.css';\n\nclass NewPasswordSent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.handleToggle('loginForm');\n  }\n\n  render() {\n    return(\n      <Container className=\"new-password-sent-container\">\n        <Row>\n          <Col>\n            <p className=\"lead\">A temporary password has been sent to your email.</p>\n            <Button onClick={this.handleClick} variant=\"dark\">Return to Sign In</Button>\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default NewPasswordSent;\n","import React from 'react';\nimport ForgotPasswordForm from './ForgotPasswordForm';\nimport NewPasswordSent from './NewPasswordSent';\n\nclass ForgotPassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showForm: true,\n      showSpinner: false,\n      showWarning: false\n    };\n    this.requestNewPassword = this.requestNewPassword.bind(this);\n    this.handleDisplay = this.handleDisplay.bind(this);\n    this.closeWarning = this.closeWarning.bind(this);\n  }\n\n  handleDisplay() {\n    if(this.state.showForm) {\n      return <ForgotPasswordForm\n        handleToggle={this.props.handleToggle}\n        requestNewPassword={this.requestNewPassword}\n        spinner={this.state.showSpinner}\n        showWarning={this.state.showWarning}\n        closeWarning={this.closeWarning}\n      />;\n    } else {\n      //show message\n      return <NewPasswordSent handleToggle={this.props.handleToggle}/>;\n    }\n  }\n\n  closeWarning() {\n    this.setState({showWarning: false});\n  }\n\n  requestNewPassword(email) {\n    this.setState({showSpinner: true});\n    fetch('/forgotPassword', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'omit',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify({\n        email: email\n      })\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((response) => {\n        if(response.result) {\n          this.setState({showForm: false, showSpinner: false});\n        } else {\n          this.setState({showTrue: false, showSpinner: false, showWarning: true});\n        }\n      });\n  }\n\n  render() {\n    return(\n      <div>\n        {this.handleDisplay()}\n      </div>\n    );\n  }\n};\n\nexport default ForgotPassword;\n","import React from 'react';\nimport LandingHeader from './LandingHeader';\nimport LoginForm from './LoginForm';\nimport About from './About';\nimport SignupForm from './SignupForm';\nimport ForgotPassword from './ForgotPassword';\n\nclass LandingPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'loginForm'\n    };\n\n    this.handleDisplay = this.handleDisplay.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle(action) {\n    window.scrollTo(0, 0);\n    if(action === 'loginForm') {\n      this.setState({show: 'loginForm'});\n    } else if(action === 'about') {\n      this.setState({show: 'about'});\n    } else if(action === 'signUpForm') {\n      this.setState({show: 'signUpForm'});\n    } else {\n      this.setState({show: 'forgotPassword'});\n    }\n  }\n\n  handleDisplay() {\n    if(this.state.show === 'loginForm') {\n      return <LoginForm handleLogin={this.props.handleLogin} handleToggle={this.handleToggle}/>;\n    } else if(this.state.show === 'about') {\n      return <About handleToggle={this.handleToggle}/>;\n    } else if(this.state.show === 'signUpForm') {\n      return <SignupForm handleToggle={this.handleToggle}/>;\n    } else {\n      return <ForgotPassword handleToggle={this.handleToggle}/>;\n    }\n  }\n\n  render() {\n    return(\n      <div>\n        <LandingHeader handleToggle={this.handleToggle}/>\n        {this.handleDisplay()}\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\n\nclass ReportCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleTitleClick = this.handleTitleClick.bind(this);\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    if(event.target.id === 'viewReport') this.props.changeView('viewReport', this.props.reportIndex);\n    if(event.target.id === 'editReport') this.props.changeView('editReport', this.props.reportIndex);\n    if(event.target.id === 'deleteReport') this.props.showDeleteReportWarning(this.props.reportIndex);\n  }\n\n  handleTitleClick() {\n    this.props.changeView('viewReport', this.props.reportIndex)\n  }\n\n  render() {\n    return(\n      <Card style={{ width: '19rem', marginBottom: '3rem'}}>\n        <Card.Header variant=\"dark\">RA Report</Card.Header>\n        <Card.Body>\n          <Card.Title onClick={this.handleTitleClick} style={{cursor: 'pointer'}}>{this.props.report.name}</Card.Title>\n          <Card.Text>\n            {this.props.report.description}\n          </Card.Text>\n          <ButtonGroup>\n            <Button id=\"viewReport\" size=\"sm\" variant=\"outline-secondary\" onClick={this.handleClick}>View</Button>\n            <Button id=\"editReport\" size=\"sm\" variant=\"outline-secondary\" onClick={this.handleClick}>Edit</Button>\n            <Button id=\"deleteReport\" size=\"sm\" variant=\"outline-secondary\" onClick={this.handleClick}>Delete</Button>\n          </ButtonGroup>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default ReportCard;\n","import React from 'react';\nimport ReportCard from './ReportCard';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport '../css/report-list.css';\n\nclass ReportList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAlert: false,\n      showModal: false,\n      deleteReportName: '',\n      deleteReportID: 0,\n      plurals: ''\n    };\n\n    this.createReport = this.createReport.bind(this);\n    this.showDeleteReportWarning = this.showDeleteReportWarning.bind(this);\n    this.updateReportData = this.updateReportData.bind(this);\n    this.deleteReport = this.deleteReport.bind(this);\n    this.handleAlert = this.handleAlert.bind(this);\n  }\n\n  handleAlert() {\n    if(this.state.showAlert) {\n      return <Alert onClose={() => {this.setState({showAlert: false})}} dismissible variant=\"success\">All Reports Updated</Alert>;\n    }\n  }\n\n  createReport(event) {\n    event.preventDefault();\n    this.props.changeView('createReport');\n  }\n\n  showDeleteReportWarning(reportIndex) {\n    let reports = this.props.reports.toArray();\n    this.setState({\n      showModal: true,\n      deleteReportName: reports[reportIndex].name,\n      deleteReportID: reports[reportIndex].reportid\n    });\n  }\n\n  updateReportData(event) {\n    event.preventDefault();\n    fetch('/updateReportData?userID=' + this.props.userInfo.userid)\n      .then(res => res.json())\n      .then((reports) => {\n        this.props.updateReports(reports);\n        this.setState({showAlert: true});\n      });\n  }\n\n  deleteReport(event) {\n    event.preventDefault();\n    fetch('/deleteReport?userID='+this.props.userInfo.userid+'&reportID='+this.state.deleteReportID)\n      .then(res => res.json())\n      .then((response) => {\n        this.props.updateReports(response.reportData);\n        this.setState({showModal: false});\n      });\n  }\n\n  handlePlural() {\n    let state;\n    switch(this.props.reports.size) {\n      case 0:\n        state = 'Click \"Create Report\" to make your first report!';\n        break;\n      case 1:\n        state = 'Below is your report. Click \"Create Report\" to make another.';\n        break;\n      default:\n        state = 'Below are your reports.';\n        break;\n    }\n\n    if(this.state.plurals !== state) {\n      this.setState({\n        plurals: state\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.handlePlural();\n  }\n\n  componentDidUpdate() {\n    this.handlePlural();\n  }\n\n  render() {\n    let reports = this.props.reports.toArray();\n\n    return(\n      <div>\n        <Jumbotron style={{backgroundColor: '#FFF', textAlign: 'center', padding: '92px 0px 92px 0px'}}>\n          <h1 style={{fontWeight: '300'}}>Reports</h1>\n          <p className=\"lead\">Welcome {this.props.userInfo.firstname}! {this.state.plurals}</p>\n          <div className=\"button-container\">\n            <Button className=\"action-button\" onClick={this.createReport}>Create New Report</Button>\n            <Button className=\"action-button\" onClick={this.updateReportData} variant=\"dark\">Refresh Report Data</Button>\n          </div>\n        </Jumbotron>\n\n        <Modal show={this.state.showModal} onHide={() => this.setState({showModal: false})}>\n          <Modal.Header closeButton>\n            <Modal.Title>Delete Report</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Are you sure you want to delete your {this.state.deleteReportName} report?</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => {this.setState({showModal: false})}}>\n              Cancel\n            </Button>\n            <Button onClick={this.deleteReport} variant=\"danger\">\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <div style={{width: '80%', margin: '0 auto',}}>\n          {this.handleAlert()}\n          <div className=\"grid\">\n          {\n            reports.map((report, index) => {\n              return(<ReportCard\n                showDeleteReportWarning={this.showDeleteReportWarning}\n                changeView={this.props.changeView}\n                report={report}\n                reportIndex={index}\n                key={report.reportid}/>\n              )\n            })\n          }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReportList;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport '../css/report-form.css';\nimport { WithContext as ReactTags } from 'react-tag-input';\n\nconst KeyCodes = {\n  comma: 188,\n  enter: 13,\n};\n\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n\nclass CreateReport extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      reportName: '',\n      reportDescription: '',\n      subreddits: [],\n      suggestions: [],\n      showAlert: false\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleAddition = this.handleAddition.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n    this.createReport = this.createReport.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAlert = this.handleAlert.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('/getSubreddits')\n      .then(res => res.json())\n      .then((result) => {\n        let subreddits = [];\n        result.forEach((value) => {\n          subreddits.push({text: value.subredditname, id: value.subredditname});\n        });\n        this.setState({suggestions: subreddits});\n      });\n  }\n\n  handleChange(event) {\n    if(event.target.id === 'reportName') this.setState({reportName: event.target.value});\n    if(event.target.id === 'reportDescription') this.setState({reportDescription: event.target.value});\n    if(event.target.id === 'notifications') this.setState({notifications: event.target.checked});\n  }\n\n  createReport(event) {\n    event.preventDefault();\n    if(this.state.subreddits.length < 1) {\n      this.setState({\n        showAlert: true\n      });\n    } else {\n      let subreddits = this.state.subreddits.map(value => value.text);\n      fetch('/createReport', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'omit',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrer: 'no-referrer',\n        body: JSON.stringify({\n          userID: this.props.userID,\n          name: this.state.reportName,\n          description: this.state.reportDescription,\n          subreddits: subreddits,\n          notifications: false\n        })\n      })\n        .then(res => res.json())\n        .then((response) => {\n          if(response.reportCreated) {\n            this.props.changeView('reports');\n            this.props.updateReports(response.reportData)\n          } else {\n            //handle server error\n          }\n        });\n    }\n  }\n\n  handleClick() {\n    this.props.changeView('reports');\n  }\n\n  handleDelete(i) {\n    const { subreddits } = this.state;\n    this.setState({\n     subreddits: subreddits.filter((subreddit, index) => index !== i),\n    });\n  }\n\n  handleAddition(subreddit) {\n      this.setState(state => ({ subreddits: [...state.subreddits, subreddit] }));\n  }\n\n  handleDrag(subreddit, currPos, newPos) {\n      const subreddits = [...this.state.subreddits];\n      const newSubreddits = subreddits.slice();\n\n      newSubreddits.splice(currPos, 1);\n      newSubreddits.splice(newPos, 0, subreddit);\n\n      // re-render\n      this.setState({ subreddits: newSubreddits });\n  }\n\n  handleAlert() {\n    if(this.state.showAlert) {\n      return <Alert variant=\"danger\" onClose={() => {this.setState({showAlert: false})}}  dismissible>You need at least 1 subreddit to create a report</Alert>;\n    }\n  }\n\n  render() {\n    const { subreddits, suggestions } = this.state;\n    return(\n      <Container>\n        <Jumbotron style={{backgroundColor: '#FFF', textAlign: 'center', padding: '92px 0px 92px 0px'}}>\n          <h1 style={{fontWeight: '300'}}>Create Report</h1>\n          <p className=\"lead\">Use the form below to create a new report.</p>\n          <Button onClick={this.handleClick} style={{marginRight: '1rem'}}>Back to Reports</Button>\n        </Jumbotron>\n        <Row>\n          <Col>\n            <Form className=\"createReportForm\" onSubmit={this.createReport}>\n              {this.handleAlert()}\n              <Form.Group controlId=\"reportName\">\n                <Form.Label>Report Name</Form.Label>\n                <Form.Control value={this.state.reportName} onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter a Report Name\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"reportDescription\">\n                <Form.Label>Report Description</Form.Label>\n                <Form.Control value={this.state.reportDescription} onChange={this.handleChange} as=\"textarea\" rows=\"3\" placeholder=\"Enter Report Description (or none at all)\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"subreddits\">\n                <Form.Label>Subreddits</Form.Label>\n                <ReactTags\n                  classNames={{\n                    tags: '',\n                    tagInput: 'tagInputClass',\n                    tagInputField: 'form-control',\n                    selected: 'selectedClass',\n                    tag: 'btn btn-secondary tag-button',\n                    remove: 'tag-button-remove'\n                  }}\n                  allowDeleteFromEmptyInput={false}\n                  tags={subreddits}\n                  suggestions={suggestions}\n                  handleDelete={this.handleDelete}\n                  handleAddition={this.handleAddition}\n                  handleDrag={this.handleDrag}\n                  delimiters={delimiters}\n                  placeholder={'Add a new subreddit'}\n                  autofocus={false}\n                />\n\n              </Form.Group>\n\n              <Button variant=\"dark\" type=\"submit\" block>\n                Create Report\n              </Button>\n\n            </Form>\n          </ Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default CreateReport;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport '../css/subreddit-list.css';\n\nclass SubredditList extends React.Component {\n  render() {\n    return(\n      <div className=\"subredditList\">\n        {\n          this.props.subreddits.map((value, index) => {\n            return (<Button onClick={(event) => {event.preventDefault(); this.props.updateSubredditIndex(index)}} className=\"subreddit-button\" variant=\"secondary\" key={index}>{value}</Button>)\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default SubredditList;\n","import React from 'react';\nimport '../css/submissions.css';\n\nclass Submissions extends React.Component {\n  render() {\n    return(\n      <div className=\"submissions\">\n        <h2><a rel=\"noopener noreferrer\" target=\"_blank\" href={'https://www.reddit.com/r/' + this.props.subredditName}>{this.props.subredditName}</a></h2>\n        {\n          this.props.submissions.map((submission, index) => {\n            return(\n              <div key={index} style={{padding: '3rem', marginBottom: '3rem', border: 'solid lightgray 2px', borderRadius: '5px'} }>\n                <p className=\"lead\">\n                  <a style={{color: '#333'}} rel=\"noopener noreferrer\" target=\"_blank\" href={submission.url}>{submission.title}</a>\n                </p>\n                <p>Posted By: {submission.handlename}</p>\n                <div style={{marginTop: '1.5rem', marginLeft: '3rem'}}>\n                  <p className=\"lead\">Top Comments</p>\n                  {\n                    submission.comments.map((comment, index) => {\n                      return(\n                        <p key={index}>{comment.handlename}: {comment.commenttext}</p>\n                      )\n                    })\n                  }\n                </div>\n              </div>\n            )\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default Submissions;\n","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport SubredditList from './SubredditList';\nimport Submissions from './Submissions';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Modal from 'react-bootstrap/Modal';\nimport '../css/view-report.css';\n\nclass ViewReport extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      subredditIndex: 0,\n      showSpinner: false,\n      showModal: false\n    }\n\n    this.handleClick = this.handleClick.bind(this);\n    this.updateSubredditIndex = this.updateSubredditIndex.bind(this);\n    this.updateReportData = this.updateReportData.bind(this);\n    this.handleSpinner = this.handleSpinner.bind(this);\n    this.showDeleteReportWarning = this.showDeleteReportWarning.bind(this);\n    this.deleteReport = this.deleteReport.bind(this);\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    this.props.changeView('reports');\n  }\n\n  handleSpinner() {\n    if(this.state.showSpinner) {\n      return <Spinner size=\"sm\" animation=\"grow\" variant=\"light\" />;\n    } else {\n      return 'Refresh Report Data';\n    }\n  }\n\n  showDeleteReportWarning() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  deleteReport(event) {\n    event.preventDefault();\n    fetch('/deleteReport?userID='+this.props.userInfo.userid+'&reportID='+this.props.report.reportid)\n      .then(res => res.json())\n      .then((response) => {\n        this.props.updateReports(response.reportData);\n        this.props.changeView('reports');\n      });\n  }\n\n  updateReportData(event) {\n    event.preventDefault();\n    fetch('/updateReportData?userID=' + this.props.userInfo.userid)\n      .then((res) => {\n        this.setState({showSpinner: true});\n        return res.json();\n      })\n      .then((reports) => {\n        this.setState({showSpinner: false});\n        this.props.updateReports(reports);\n        this.props.changeView('viewReport', this.props.reportIndex);\n      });\n  }\n\n  updateSubredditIndex(index) {\n    this.setState({subredditIndex: index});\n  }\n\n  render() {\n    return(\n      <div>\n        <Modal show={this.state.showModal} onHide={() => this.setState({showModal: false})}>\n          <Modal.Header closeButton>\n            <Modal.Title>Delete Report</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Are you sure you want to delete your {this.props.report.name} report?</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => {this.setState({showModal: false})}}>\n              Cancel\n            </Button>\n            <Button onClick={this.deleteReport} variant=\"danger\">\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Jumbotron style={{backgroundColor: '#FFF', textAlign: 'center', padding: '92px 0px 92px 0px'}}>\n          <h1 style={{fontWeight: '300'}}>{this.props.report.name}</h1>\n          <p className=\"lead\">{this.props.report.description}</p>\n          <div className=\"button-container\">\n            <Button className=\"action-button\" onClick={this.handleClick} >Back to Reports</Button>\n            <Button className=\"action-button\" onClick={this.updateReportData} variant=\"dark\">{this.handleSpinner()}</Button>\n            <Button className=\"action-button\" onClick={(event) => {event.preventDefault(); this.showDeleteReportWarning()}}>Delete Report</Button>\n          </div>\n        </Jumbotron>\n        <SubredditList updateSubredditIndex={this.updateSubredditIndex} subreddits={this.props.report.subreddits}/>\n        <Submissions\n          subredditName={this.props.report.subreddits[this.state.subredditIndex]}\n          submissions={this.props.report.submissions[this.state.subredditIndex]}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ViewReport;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../css/report-form.css';\nimport { WithContext as ReactTags } from 'react-tag-input';\n\nconst KeyCodes = {\n  comma: 188,\n  enter: 13,\n};\n\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n\nclass EditReport extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      reportName: '',\n      reportDescription: '',\n      subreddits: [],\n      suggestions: []\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleAddition = this.handleAddition.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n    this.editReport = this.editReport.bind(this);\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    this.props.changeView('reports');\n  }\n\n  handleChange(event) {\n    if(event.target.id === 'reportName') this.setState({reportName: event.target.value});\n    if(event.target.id === 'reportDescription') this.setState({reportDescription: event.target.value});\n    if(event.target.id === 'notifications') this.setState({notifications: event.target.checked});\n  }\n\n  handleDelete(i) {\n    const { subreddits } = this.state;\n    this.setState({\n     subreddits: subreddits.filter((subreddit, index) => index !== i),\n    });\n  }\n\n  handleAddition(subreddit) {\n      this.setState(state => ({ subreddits: [...state.subreddits, subreddit] }));\n  }\n\n  handleDrag(subreddit, currPos, newPos) {\n      const subreddits = [...this.state.subreddits];\n      const newSubreddits = subreddits.slice();\n\n      newSubreddits.splice(currPos, 1);\n      newSubreddits.splice(newPos, 0, subreddit);\n\n      // re-render\n      this.setState({ subreddits: newSubreddits });\n  }\n\n  componentDidMount() {\n    let subreddits = this.props.report.subreddits.map(value => { return {id: value, text: value}});\n    this.setState({\n      reportName: this.props.report.name,\n      reportDescription: this.props.report.description,\n      subreddits: subreddits\n    });\n  }\n\n  editReport(event) {\n    event.preventDefault();\n\n    let subreddits = this.state.subreddits.map(value => value.text);\n\n    fetch('/editReport', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'omit',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify({\n        userID: this.props.userInfo.userid,\n        reportID: this.props.report.reportid,\n        name: this.state.reportName,\n        description: this.state.reportDescription,\n        subreddits: subreddits,\n        notifications: false\n      })\n    })\n      .then(res => res.json())\n      .then((response) => {\n        if(response.reportEdited) {\n          this.props.changeView('reports');\n          this.props.updateReports(response.reportData)\n        } else {\n          //handle server error\n        }\n      });\n  }\n\n  render() {\n    const { subreddits, suggestions } = this.state;\n    return(\n      <Container>\n        <Jumbotron style={{backgroundColor: '#FFF', textAlign: 'center', padding: '92px 0px 92px 0px'}}>\n          <h1 style={{fontWeight: '300'}}>Edit {this.props.report.name} Report</h1>\n          <p className=\"lead\">Use the form below to edit the report.</p>\n          <Button onClick={this.handleClick} style={{marginRight: '1rem'}}>Back to Reports</Button>\n        </Jumbotron>\n        <Row>\n          <Col>\n            <Form className=\"editReportForm\" onSubmit={this.editReport}>\n              <Form.Group controlId=\"reportName\">\n                <Form.Label>Report Name</Form.Label>\n                <Form.Control value={this.state.reportName} onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter a Report Name\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"reportDescription\">\n                <Form.Label>Report Description</Form.Label>\n                <Form.Control value={this.state.reportDescription} onChange={this.handleChange} as=\"textarea\" rows=\"3\" placeholder=\"Enter Report Description (or none at all)\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"subreddits\">\n                <Form.Label>Subreddits</Form.Label>\n                <ReactTags\n                  classNames={{\n                    tags: '',\n                    tagInput: 'tagInputClass',\n                    tagInputField: 'form-control',\n                    selected: 'selectedClass',\n                    tag: 'btn btn-secondary tag-button',\n                    remove: 'tag-button-remove'\n                  }}\n                  allowDeleteFromEmptyInput={false}\n                  tags={subreddits}\n                  suggestions={suggestions}\n                  handleDelete={this.handleDelete}\n                  handleAddition={this.handleAddition}\n                  handleDrag={this.handleDrag}\n                  delimiters={delimiters}\n                  placeholder={'Add a new subreddit'}\n                  autofocus={false}\n                />\n\n              </Form.Group>\n\n              <Button variant=\"dark\" type=\"submit\" block>\n                Edit Report\n              </Button>\n\n            </Form>\n          </ Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default EditReport;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Alert from 'react-bootstrap/Alert';\nimport '../css/account-settings-form.css';\n\nclass AccountSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      firstName: '',\n      lastName: '',\n      password: '',\n      passwordCheck: '',\n      showAlert: false,\n      alert: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleViewChange = this.handleViewChange.bind(this);\n    this.handleAlert = this.handleAlert.bind(this);\n    this.updateUserInfo = this.updateUserInfo.bind(this);\n    this.changePassword = this.changePassword.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      username: this.props.userInfo.username,\n      email: this.props.userInfo.email,\n      firstName: this.props.userInfo.firstname,\n      lastName: this.props.userInfo.lastname\n    });\n  }\n\n  handleChange(e) {\n    if(e.target.id === 'username') this.setState({username: e.target.value});\n    if(e.target.id === 'email') this.setState({email: e.target.value});\n    if(e.target.id === 'firstName') this.setState({firstName: e.target.value});\n    if(e.target.id === 'lastName') this.setState({lastName: e.target.value});\n    if(e.target.id === 'password') this.setState({password: e.target.value});\n    if(e.target.id === 'passwordCheck') this.setState({passwordCheck: e.target.value});\n  }\n\n  handleViewChange(e) {\n    e.preventDefault();\n    this.props.changeView('reports');\n  }\n\n  handleAlert() {\n    if(this.state.showAlert) {\n      if(this.state.alert === 'Passwords do not match' || this.state.alert === 'Username and/or Email already in use') {\n        return <Alert onClose={() => {this.setState({showAlert: false})}} dismissible variant=\"danger\">{this.state.alert}</Alert>;\n      } else {\n        return <Alert onClose={() => {this.setState({showAlert: false})}} dismissible variant=\"success\">{this.state.alert}</Alert>;\n        }\n      }\n  }\n\n  updateUserInfo(event) {\n    event.preventDefault();\n    fetch('/editUser', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'omit',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify({\n        userID: this.props.userInfo.userid,\n        userData: {\n          username: this.state.username,\n          email: this.state.email,\n          firstName: this.state.firstName,\n          lastName: this.state.lastName\n        }\n      })\n    })\n      .then((res => res.json()))\n      .then((response) => {\n        if(response.userEdited) {\n          this.setState({\n            showAlert: true,\n            alert: 'Your account info has been updated'\n          }, () => {\n            window.scrollTo(0, 0);\n            this.props.updateUserData(response.userData);\n          });\n        } else {\n          this.setState({\n            showAlert: true,\n            alert: 'Username and/or Email already in use'\n          }, () => {\n            window.scrollTo(0, 0);\n          });\n        }\n      });\n  }\n\n  changePassword(event) {\n    event.preventDefault();\n    if(this.state.password === this.state.passwordCheck) {\n      fetch('/changePassword', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'omit',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrer: 'no-referrer',\n        body: JSON.stringify({\n          userID: this.props.userInfo.userid,\n          password: this.state.password\n        })\n      })\n        .then((res => res.json()))\n        .then((response) => {\n          if(response.passwordChanged === true) {\n            this.setState({\n              showAlert: true,\n              alert: 'Your password has been changed'\n            }, () => {\n              window.scrollTo(0, 0);\n            });\n          }\n        });\n    } else {\n      this.setState({\n        showAlert: true,\n        alert: 'Passwords do not match'\n      }, () => {\n        window.scrollTo(0, 0);\n      });\n    }\n  }\n\n  render() {\n    return(\n      <div>\n        <Jumbotron style={{backgroundColor: '#FFF', textAlign: 'center', padding: '92px 0px 92px 0px'}}>\n          <h1 style={{fontWeight: '300'}}>Account Settings</h1>\n          <p className=\"lead\">Use the form below to edit your account settings.</p>\n          <Button onClick={this.handleViewChange} style={{marginRight: '1rem'}}>Back to Reports</Button>\n        </Jumbotron>\n        <Form onSubmit={this.updateUserInfo} className=\"signup-form\">\n          {this.handleAlert()}\n          <h2>User Info</h2>\n          <Form.Group>\n            <Form.Label>Username</Form.Label>\n            <Form.Control value={this.state.username} id=\"username\" onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter a Username\" />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control value={this.state.email} id=\"email\" onChange={this.handleChange} required=\"required\" type=\"email\" placeholder=\"Enter your Email\" />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>First Name</Form.Label>\n            <Form.Control value={this.state.firstName} id=\"firstName\" onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter Your First Name\" />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control value={this.state.lastName} id=\"lastName\" onChange={this.handleChange} required=\"required\" type=\"text\" placeholder=\"Enter Your Last Name\" />\n          </Form.Group>\n\n          <Button variant=\"dark\" type=\"submit\" block>\n            Update User Info\n          </Button>\n        </Form>\n        <Form style={{marginTop: '3rem'}}className=\"signup-form password-form\" onSubmit={this.changePassword}>\n          <h2>Change Password</h2>\n          <Form.Group>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control value={this.state.password} id=\"password\" onChange={this.handleChange} required=\"required\" type=\"password\" placeholder=\"Enter a Username\" />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Re-type Password</Form.Label>\n            <Form.Control value={this.state.passwordCheck} id=\"passwordCheck\" onChange={this.handleChange} required=\"required\" type=\"password\" placeholder=\"Enter your Email\" />\n          </Form.Group>\n\n          <Button variant=\"dark\" type=\"submit\" block>\n            Change Password\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default AccountSettings;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport ReportList from './ReportList';\nimport CreateReport from './CreateReport';\nimport ViewReport from './ViewReport';\nimport EditReport from './EditReport';\nimport AccountSettings from './AccountSettings';\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'reports',\n      reportIndex: 0\n    };\n\n    this.handleView = this.handleView.bind(this);\n    this.changeView = this.changeView.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  handleView() {\n    window.scrollTo(0, 0);\n    if(this.state.show === 'reports') {\n      return <ReportList\n        updateReports={this.props.updateReports}\n        changeView={this.changeView}\n        userInfo={this.props.userData}\n        reports={this.props.reports}\n      />;\n    } else if(this.state.show === 'createReport') {\n      return <CreateReport\n        updateReports={this.props.updateReports}\n        userID={this.props.userData.userid}\n        changeView={this.changeView}\n      />;\n    } else if(this.state.show === 'viewReport') {\n      let reports = this.props.reports.toArray();\n      return <ViewReport\n        reportIndex={this.state.reportIndex}\n        report={reports[this.state.reportIndex]}\n        changeView={this.changeView}\n        userInfo={this.props.userData}\n        updateReports={this.props.updateReports}\n      />;\n    } else if(this.state.show === 'editReport') {\n      let reports = this.props.reports.toArray();\n      return <EditReport\n        reportIndex={this.state.reportIndex}\n        report={reports[this.state.reportIndex]}\n        changeView={this.changeView}\n        userInfo={this.props.userData}\n        updateReports={this.props.updateReports}\n      />;\n    } else {\n      return <AccountSettings\n        userInfo={this.props.userData}\n        changeView={this.changeView}\n        updateUserData={this.props.updateUserData}\n      />;\n    }\n  }\n\n  changeView(view, reportIndex = null) {\n    window.scrollTo(0,0);\n    if(view === 'viewReport' || view === 'editReport') {\n      this.setState({show: view, reportIndex: reportIndex});\n    } else {\n      this.setState({show: view});\n    }\n  }\n\n  logout() {\n    fetch('/logout')\n      .then(res => res.json())\n      .then((response) => {\n        if(response.loggedOut) {\n          this.props.handleLogout();\n        }\n      });\n  }\n\n  render() {\n    return(\n      <div>\n        <Navbar style={{display: 'flex', justifyContent: 'space-between'}} bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand style={{cursor: 'pointer'}} onClick={() => {this.changeView('reports')}}>Reddit Aggregator</Navbar.Brand>\n          <DropdownButton variant=\"secondary\" id=\"dropdown-basic-button\" title=\"Menu\" alignRight>\n            <Dropdown.Item onClick={() => {this.setState({show: 'reports'})}}>Reports</Dropdown.Item>\n            <Dropdown.Item onClick={() => {this.setState({show: 'createReport'})}}>Create Report</Dropdown.Item>\n            <Dropdown.Item onClick={() => {this.setState({show: 'AccountSettings'})}}>Account Settings</Dropdown.Item>\n            <Dropdown.Item onClick={() => {this.logout()}}>Logout</Dropdown.Item>\n          </DropdownButton>\n        </Navbar>\n        {this.handleView()}\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport LandingPage from './components/LandingPage';\nimport Dashboard from './components/Dashboard';\nimport { List } from 'immutable';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userData: null,\n      loggedIn: false,\n      serverChecked: false,\n      initialLoad: true,\n      reports: []\n    };\n\n    this.handleDisplay = this.handleDisplay.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.updateReports = this.updateReports.bind(this);\n    this.updateUserData = this.updateUserData.bind(this);\n  }\n\n  componentDidMount() {\n    //run once to see if the user is logged in or not\n    fetch('/checkLoginStatus', {\n      headers : {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    })\n      .then(res => res.json())\n      .then((result) => {\n        const reports = List(result.reportData);\n        this.setState({\n          loggedIn: result.loggedIn,\n          userData: result.userData,\n          serverChecked: true,\n          initialLoad: false,\n          reports: reports\n        });\n      });\n  }\n\n  updateReports(reportData) {\n    const reports = List(reportData);\n    this.setState({\n      reports: reports\n    });\n  }\n\n  updateUserData(userData) {\n    this.setState({\n      userData: userData\n    });\n  }\n\n  handleDisplay() {\n    if(!this.state.initialLoad) {\n      if(this.state.loggedIn) {\n        return <Dashboard\n          updateReports={this.updateReports}\n          updateUserData={this.updateUserData}\n          reports={this.state.reports}\n          userData={this.state.userData}\n          handleLogout={this.handleLogout}\n        />;\n      } else {\n        return <LandingPage handleLogin={this.handleLogin} />;\n      }\n    }\n  }\n\n  handleLogin(response) {\n    const reports = List(response.reportData);\n    this.setState({\n      userData: response.userData,\n      loggedIn: response.loggedIn,\n      reports: reports\n    });\n  }\n\n  handleLogout() {\n    this.setState({\n      userData: {},\n      loggedIn: false,\n      reports: []\n    });\n  }\n\n  render() {\n    return(\n      <div className=\"app\">\n        {this.handleDisplay()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}